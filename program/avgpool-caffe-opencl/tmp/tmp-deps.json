{
  "lib-nntest": {
    "sort": 2, 
    "bat": ". /home/nikolay/CK/local/env/4c19a8e4f5093d05/env.sh\n", 
    "cus": {
      "add_include_path": "yes", 
      "used_package_uid": "a6f6a5e9a44c7999", 
      "skip_add_to_bin": "yes", 
      "path_include": "/home/nikolay/CK-TOOLS/lib-nntest-0.1-gcc-6.3.0-linux-64/install/include", 
      "skip_add_to_path": "yes", 
      "skip_path": "yes", 
      "used_package_uoa": "lib-nntest", 
      "soft_file": {
        "win": "include\\ck_nntest_common.h", 
        "linux": "include/ck_nntest_common.h"
      }, 
      "version": "0.1", 
      "env_prefix": "CK_ENV_LIB_NNTEST", 
      "extra_dir": "", 
      "version_split": [
        0, 
        1
      ], 
      "limit_recursion_dir_search": {
        "win": 4, 
        "linux": 4
      }, 
      "full_path": "/home/nikolay/CK-TOOLS/lib-nntest-0.1-gcc-6.3.0-linux-64/install/include/ck_nntest_common.h"
    }, 
    "name": "NNTest library", 
    "tags": "lib,nntest", 
    "num_entries": 1, 
    "choices": [
      "4c19a8e4f5093d05"
    ], 
    "uoa": "4c19a8e4f5093d05", 
    "dict": {
      "data_name": "NNTest library", 
      "deps": {
        "xopenme": {
          "sort": 100, 
          "bat": ". /home/nikolay/CK/local/env/799de4c0e89eb088/env.sh\n", 
          "ver": "0.3", 
          "name": "xOpenME library", 
          "tags": "lib,xopenme", 
          "uoa": "799de4c0e89eb088", 
          "choices": [
            "799de4c0e89eb088"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {
              "compiler": {
                "detected_ver": "6.3.0", 
                "sort": 10, 
                "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
                "ver": "6.3.0", 
                "name": "C compiler", 
                "tags": "compiler,lang-c", 
                "build_dir_name": "gcc", 
                "uoa": "1a4f96b3790174ff", 
                "choices": [
                  "92584cbdaf8ec6d0"
                ], 
                "num_entries": 2, 
                "dict": {
                  "env_script": "env.sh", 
                  "deps": {}, 
                  "tags": [
                    "64bits", 
                    "compiler", 
                    "gcc", 
                    "host-os-linux-64", 
                    "lang-c", 
                    "lang-cpp", 
                    "target-os-linux-64", 
                    "v6", 
                    "v6.3", 
                    "v6.3.0"
                  ], 
                  "customize": {
                    "tool_postfix": "-6", 
                    "can_strip_dynamic_lib": "yes", 
                    "build_dir_name": "gcc", 
                    "skip_path": "yes", 
                    "tool_prefix_configured": "yes", 
                    "tool_prefix": "", 
                    "tool_postfix_configured": "yes", 
                    "env_prefix": "CK_ENV_COMPILER_GCC", 
                    "soft_version_cmd": {
                      "win": " --version > $#filename#$ 2>&1", 
                      "linux": "--version > $#filename#$ 2>&1"
                    }, 
                    "soft_path_example": {
                      "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                      "linux": "/usr/bin/gcc"
                    }, 
                    "languages": [
                      "C", 
                      "CPP"
                    ], 
                    "version": "6.3.0", 
                    "soft_file_from_host_os": "yes", 
                    "sort": 100, 
                    "soft_file": {
                      "win": "gcc.exe", 
                      "linux": "gcc"
                    }, 
                    "retarget": "no", 
                    "search_numeric_ext_on_linux": "yes", 
                    "add_to_path": "yes", 
                    "add_only_with_version": "yes", 
                    "version_split": [
                      6, 
                      3, 
                      0
                    ], 
                    "limit_recursion_dir_search": {
                      "win": 4, 
                      "linux": 3
                    }, 
                    "check_that_exists": "yes", 
                    "ck_version": 10, 
                    "only_for_target_os_tags": [
                      "mingw", 
                      "windows", 
                      "linux"
                    ], 
                    "full_path": "/usr/bin/gcc-6"
                  }, 
                  "setup": {
                    "version_split": [
                      6, 
                      3, 
                      0
                    ], 
                    "target_os_bits": "64", 
                    "version": "6.3.0", 
                    "host_os_uoa": "4258b5fe54828a50", 
                    "target_os_uoa": "4258b5fe54828a50"
                  }, 
                  "data_name": "GNU C compiler", 
                  "soft_uoa": "3a8a82fa40bf992d", 
                  "env": {
                    "CK_FLAGS_DYNAMIC_BIN": " ", 
                    "CK_COMPILER_FLAGS_OBLIGATORY": "", 
                    "CK_AR": "ar", 
                    "CK_COMPILER_POSTFIX": "-6", 
                    "CK_PROFILER": "gprof", 
                    "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
                    "CK_LIB_EXT": ".a", 
                    "CK_OPT_SIZE": "-Os", 
                    "CK_OPT_SPEED": "-O3", 
                    "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
                    "CK_CC": "gcc-6", 
                    "CK_RANLIB": "ranlib", 
                    "CK_COMPILER_FLAG_GPROF": "-pg", 
                    "CK_OPT_ALL_WARNINGS": "-Wall", 
                    "CK_LB_OUTPUT": "-o ", 
                    "CK_COMPILER_FLAG_STD90": "-std=c90", 
                    "CK_FLAG_PREFIX_VAR": "-D", 
                    "CK_FLAGS_STATIC_LIB": "-fPIC", 
                    "CK_EXTRA_LIB_M": "-lm", 
                    "CK_COMPILER_FLAG_STD99": "-std=c99", 
                    "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
                    "CK_FLAG_PREFIX_LIB_DIR": "-L", 
                    "CK_FLAGS_CREATE_OBJ": "-c", 
                    "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
                    "CK_OPT_UNWIND": " ", 
                    "CK_OBJ_EXT": ".o", 
                    "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
                    "CK_FLAGS_OUTPUT": "-o ", 
                    "CK_LB": "ar rcs", 
                    "CK_LD": "ld", 
                    "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
                    "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
                    "CK_PLUGIN_FLAG": "-fplugin=", 
                    "CK_OPT_SPEED_SAFE": "-O2", 
                    "CK_DLL_EXT": ".so", 
                    "CK_CXX": "g++-6", 
                    "CK_ASM_EXT": ".s", 
                    "CK_FLAG_PREFIX_INCLUDE": "-I", 
                    "CK_LD_FLAGS_EXTRA": "", 
                    "CK_OBJDUMP": "objdump -d", 
                    "CK_EXE_EXT": ".out", 
                    "CK_FLAGS_DLL_EXTRA": "", 
                    "CK_FLAGS_DLL": "-shared -fPIC", 
                    "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
                    "CK_ENV_COMPILER_GCC": "/usr", 
                    "CK_EXTRA_LIB_DL": "-ldl", 
                    "CK_GPROF_OUT_FILE": "gmon.out", 
                    "CK_MAKE": "make", 
                    "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
                    "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
                    "CK_FLAGS_CREATE_ASM": "-S"
                  }, 
                  "soft_alias": "compiler.gcc"
                }, 
                "local": "yes"
              }
            }, 
            "tags": [
              "64bits", 
              "host-os-linux-64", 
              "lang-c", 
              "lang-cpp", 
              "lang-f77", 
              "lang-f90", 
              "lang-f95", 
              "lib", 
              "rtl", 
              "target-os-linux-64", 
              "v0", 
              "v0.3", 
              "xopenme"
            ], 
            "customize": {
              "used_package_uid": "0573487b8121d094", 
              "used_package_uoa": "lib-rtl-xopenme", 
              "dynamic_lib": "librtlxopenme.so", 
              "static_lib": "librtlxopenme.a", 
              "skip_path": "yes", 
              "path_include": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/include", 
              "include_name": "xopenme.h", 
              "version": "0.3", 
              "env_prefix": "CK_ENV_LIB_RTL_XOPENME", 
              "extra_dir": "", 
              "version_split": [
                0, 
                3
              ], 
              "full_path": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib/librtlxopenme.a", 
              "path_lib": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib"
            }, 
            "setup": {
              "deps_compiler": "1a4f96b3790174ff", 
              "version": "0.3", 
              "version_split": [
                0, 
                3
              ], 
              "target_os_bits": "64", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "xOpenME run-time library", 
            "package_uoa": "0573487b8121d094", 
            "soft_uoa": "673507878d649b4a", 
            "env": {
              "CK_ENV_LIB_RTL_XOPENME_INCLUDE_NAME": "xopenme.h", 
              "CK_ENV_LIB_RTL_XOPENME_DYNAMIC_NAME": "librtlxopenme.so", 
              "CK_ENV_LIB_RTL_XOPENME": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64", 
              "CK_ENV_LIB_RTL_XOPENME_STATIC_NAME": "librtlxopenme.a"
            }, 
            "soft_alias": "lib.rtl.xopenme"
          }, 
          "package_uoa": "0573487b8121d094", 
          "local": "yes"
        }, 
        "compiler": {
          "detected_ver": "6.3.0", 
          "sort": 10, 
          "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
          "ver": "6.3.0", 
          "name": "C compiler", 
          "tags": "compiler,lang-cpp", 
          "build_dir_name": "gcc", 
          "uoa": "1a4f96b3790174ff", 
          "choices": [
            "1a4f96b3790174ff"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "compiler", 
              "gcc", 
              "host-os-linux-64", 
              "lang-c", 
              "lang-cpp", 
              "target-os-linux-64", 
              "v6", 
              "v6.3", 
              "v6.3.0"
            ], 
            "customize": {
              "tool_postfix": "-6", 
              "can_strip_dynamic_lib": "yes", 
              "build_dir_name": "gcc", 
              "skip_path": "yes", 
              "tool_prefix_configured": "yes", 
              "tool_prefix": "", 
              "tool_postfix_configured": "yes", 
              "env_prefix": "CK_ENV_COMPILER_GCC", 
              "soft_version_cmd": {
                "win": " --version > $#filename#$ 2>&1", 
                "linux": "--version > $#filename#$ 2>&1"
              }, 
              "soft_path_example": {
                "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                "linux": "/usr/bin/gcc"
              }, 
              "languages": [
                "C", 
                "CPP"
              ], 
              "version": "6.3.0", 
              "soft_file_from_host_os": "yes", 
              "sort": 100, 
              "soft_file": {
                "win": "gcc.exe", 
                "linux": "gcc"
              }, 
              "retarget": "no", 
              "search_numeric_ext_on_linux": "yes", 
              "add_to_path": "yes", 
              "add_only_with_version": "yes", 
              "version_split": [
                6, 
                3, 
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 4, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "ck_version": 10, 
              "only_for_target_os_tags": [
                "mingw", 
                "windows", 
                "linux"
              ], 
              "full_path": "/usr/bin/gcc-6"
            }, 
            "setup": {
              "version_split": [
                6, 
                3, 
                0
              ], 
              "target_os_bits": "64", 
              "version": "6.3.0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "GNU C compiler", 
            "soft_uoa": "3a8a82fa40bf992d", 
            "env": {
              "CK_FLAGS_DYNAMIC_BIN": " ", 
              "CK_COMPILER_FLAGS_OBLIGATORY": "", 
              "CK_AR": "ar", 
              "CK_COMPILER_POSTFIX": "-6", 
              "CK_PROFILER": "gprof", 
              "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
              "CK_LIB_EXT": ".a", 
              "CK_OPT_SIZE": "-Os", 
              "CK_OPT_SPEED": "-O3", 
              "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
              "CK_CC": "gcc-6", 
              "CK_RANLIB": "ranlib", 
              "CK_COMPILER_FLAG_GPROF": "-pg", 
              "CK_OPT_ALL_WARNINGS": "-Wall", 
              "CK_LB_OUTPUT": "-o ", 
              "CK_COMPILER_FLAG_STD90": "-std=c90", 
              "CK_FLAG_PREFIX_VAR": "-D", 
              "CK_FLAGS_STATIC_LIB": "-fPIC", 
              "CK_EXTRA_LIB_M": "-lm", 
              "CK_COMPILER_FLAG_STD99": "-std=c99", 
              "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
              "CK_FLAG_PREFIX_LIB_DIR": "-L", 
              "CK_FLAGS_CREATE_OBJ": "-c", 
              "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
              "CK_OPT_UNWIND": " ", 
              "CK_OBJ_EXT": ".o", 
              "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
              "CK_FLAGS_OUTPUT": "-o ", 
              "CK_LB": "ar rcs", 
              "CK_LD": "ld", 
              "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
              "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
              "CK_PLUGIN_FLAG": "-fplugin=", 
              "CK_OPT_SPEED_SAFE": "-O2", 
              "CK_DLL_EXT": ".so", 
              "CK_CXX": "g++-6", 
              "CK_ASM_EXT": ".s", 
              "CK_FLAG_PREFIX_INCLUDE": "-I", 
              "CK_LD_FLAGS_EXTRA": "", 
              "CK_OBJDUMP": "objdump -d", 
              "CK_EXE_EXT": ".out", 
              "CK_FLAGS_DLL_EXTRA": "", 
              "CK_FLAGS_DLL": "-shared -fPIC", 
              "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
              "CK_ENV_COMPILER_GCC": "/usr", 
              "CK_EXTRA_LIB_DL": "-ldl", 
              "CK_GPROF_OUT_FILE": "gmon.out", 
              "CK_MAKE": "make", 
              "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
              "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
              "CK_FLAGS_CREATE_ASM": "-S"
            }, 
            "soft_alias": "compiler.gcc"
          }, 
          "local": "yes"
        }
      }, 
      "tags": [
        "64bits", 
        "channel-stable", 
        "host-os-linux-64", 
        "lang-cpp", 
        "lib", 
        "nntest", 
        "target-os-linux-64", 
        "v0", 
        "v0.1"
      ], 
      "customize": {
        "add_include_path": "yes", 
        "used_package_uid": "a6f6a5e9a44c7999", 
        "skip_add_to_bin": "yes", 
        "path_include": "/home/nikolay/CK-TOOLS/lib-nntest-0.1-gcc-6.3.0-linux-64/install/include", 
        "skip_add_to_path": "yes", 
        "skip_path": "yes", 
        "used_package_uoa": "lib-nntest", 
        "soft_file": {
          "win": "include\\ck_nntest_common.h", 
          "linux": "include/ck_nntest_common.h"
        }, 
        "version": "0.1", 
        "env_prefix": "CK_ENV_LIB_NNTEST", 
        "extra_dir": "", 
        "version_split": [
          0, 
          1
        ], 
        "limit_recursion_dir_search": {
          "win": 4, 
          "linux": 4
        }, 
        "full_path": "/home/nikolay/CK-TOOLS/lib-nntest-0.1-gcc-6.3.0-linux-64/install/include/ck_nntest_common.h"
      }, 
      "setup": {
        "deps_xopenme": "799de4c0e89eb088", 
        "deps_compiler": "1a4f96b3790174ff", 
        "version": "0.1", 
        "version_split": [
          0, 
          1
        ], 
        "target_os_bits": "64", 
        "host_os_uoa": "4258b5fe54828a50", 
        "target_os_uoa": "4258b5fe54828a50"
      }, 
      "env_script": "env.sh", 
      "package_uoa": "a6f6a5e9a44c7999", 
      "soft_uoa": "3f3beda1a806ad96", 
      "env": {
        "CK_ENV_LIB_NNTEST": "/home/nikolay/CK-TOOLS/lib-nntest-0.1-gcc-6.3.0-linux-64/install"
      }, 
      "soft_alias": "lib.nntest"
    }, 
    "ver": "0.1", 
    "package_uoa": "a6f6a5e9a44c7999", 
    "local": "yes"
  }, 
  "library": {
    "sort": -5, 
    "bat": ". /home/nikolay/CK/local/env/49f281efab7a7f13/env.sh\n", 
    "cus": {
      "git_src_dir": "src", 
      "use_git_revision": "yes", 
      "version": "trunk-a39d297", 
      "install_env": {
        "BUILD_MATLAB": 0, 
        "CMAKE_BUILD_SHARED_LIBS": 0, 
        "PACKAGE_URL_WINDOWS": "https://github.com/BVLC/caffe", 
        "PACKAGE_SKIP_CLEAN_INSTALL": "NO", 
        "USE_GREENTEA": 1, 
        "PACKAGE_SUB_DIR": "src", 
        "USE_FFT": 0, 
        "USE_LIBDNN": 0, 
        "PACKAGE_GIT_CHECKOUT_WINDOWS": "opencl", 
        "PACKAGE_GIT_CHECKOUT_ANDROID": "opencl_cmake_android", 
        "CPU_ONLY": 1, 
        "RUN_LINT": 0, 
        "DISABLE_DEVICE_HOST_UNIFIED_MEMORY": "OFF", 
        "USE_NCCL": 0, 
        "RUN_INSTALL": 0, 
        "USE_CUDNN": 0, 
        "WITH_NINJA": 0, 
        "USE_ISAAC": 0, 
        "PACKAGE_SUB_DIR1": "src", 
        "PACKAGE_GIT_CHECKOUT_LINUX": "opencl_cmake_android", 
        "PACKAGE_SKIP_CLEAN_OBJ": "YES", 
        "BUILD_PYTHON_LAYER": 0, 
        "BUILD_PYTHON": 0, 
        "CMAKE_CONFIG": "Release", 
        "RUN_TESTS": 0, 
        "PYTHON_EXE": "python", 
        "PACKAGE_SKIP_BUILD_ERROR": "YES", 
        "USE_CLBLAST": 1, 
        "USE_INTEL_SPATIAL": "OFF", 
        "PACKAGE_URL_ANDROID": "https://github.com/DVEfremov/caffe", 
        "PACKAGE_PATCH": "YES", 
        "PACKAGE_COPY": "NO", 
        "BLAS_TYPE": "Open", 
        "USE_CLBLAS": 0, 
        "PACKAGE_URL_LINUX": "https://github.com/DVEfremov/caffe", 
        "PACKAGE_CONFIGURE_FLAGS": "", 
        "PACKAGE_BUILD_TYPE": "cmake", 
        "PACKAGE_GIT": "YES", 
        "PACKAGE_SKIP_CLEAN_SRC_DIR": "YES", 
        "USE_CUDA": 0
      }, 
      "dynamic_lib": "libcaffe.so", 
      "static_lib": "libcaffe.a", 
      "git_info": {
        "revision": "a39d297", 
        "iso_datetime_cut_revision": "20170131-a39d297", 
        "iso_datetime_cut": "20170131", 
        "iso_datetime": "2017-01-31T11:57:10", 
        "datetime": "Tue Jan 31 11:57:10 2017 +0700"
      }, 
      "skip_path": "yes", 
      "path_include": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install/include", 
      "path_bin": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install/bin", 
      "env_prefix": "CK_ENV_LIB_CAFFE", 
      "extra_dir": "", 
      "version_split": [
        0, 
        0
      ], 
      "limit_recursion_dir_search": {
        "linux": 4
      }, 
      "check_that_exists": "yes", 
      "soft_file": {
        "linux": "caffe.bin"
      }, 
      "ck_version": 10, 
      "full_path": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install/bin/caffe", 
      "path_lib": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install/lib"
    }, 
    "name": "Caffe library (OpenCL)", 
    "tags": "lib,caffe,vopencl", 
    "num_entries": 2, 
    "package_uoa": "df78a1afc47a1962", 
    "uoa": "49f281efab7a7f13", 
    "no_tags": "vcuda", 
    "dict": {
      "data_name": "BVLC Caffe framework (opencl,clblast)", 
      "deps": {
        "lib-protobuf-host": {
          "skip_installed": {
            "win": "yes", 
            "android": "yes"
          }, 
          "sort": 19, 
          "bat": ". /home/nikolay/CK/local/env/38debf4a898add1c/env.sh\n", 
          "ver": "3.1.0", 
          "name": "ProtoBuf host compiler", 
          "tags": "lib,protobuf-host", 
          "uoa": "38debf4a898add1c", 
          "choices": [
            "38debf4a898add1c", 
            "7175614aa174021a"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {
              "host-compiler": {
                "detected_ver": "5.4.0", 
                "sort": 10, 
                "bat": ". /home/nikolay/CK/local/env/92584cbdaf8ec6d0/env.sh\n", 
                "ver": "5.4.0", 
                "name": "HOST C++ compiler", 
                "tags": "compiler,lang-cpp", 
                "build_dir_name": "gcc", 
                "uoa": "92584cbdaf8ec6d0", 
                "choices": [
                  "92584cbdaf8ec6d0"
                ], 
                "num_entries": 1, 
                "dict": {
                  "env_script": "env.sh", 
                  "deps": {}, 
                  "tags": [
                    "64bits", 
                    "compiler", 
                    "gcc", 
                    "host-os-linux-64", 
                    "lang-c", 
                    "lang-cpp", 
                    "target-os-linux-64", 
                    "v5", 
                    "v5.4", 
                    "v5.4.0"
                  ], 
                  "customize": {
                    "can_strip_dynamic_lib": "yes", 
                    "build_dir_name": "gcc", 
                    "skip_path": "yes", 
                    "tool_prefix_configured": "yes", 
                    "tool_prefix": "", 
                    "tool_postfix_configured": "yes", 
                    "env_prefix": "CK_ENV_COMPILER_GCC", 
                    "soft_version_cmd": {
                      "win": " --version > $#filename#$ 2>&1", 
                      "linux": "--version > $#filename#$ 2>&1"
                    }, 
                    "soft_path_example": {
                      "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                      "linux": "/usr/bin/gcc"
                    }, 
                    "languages": [
                      "C", 
                      "CPP"
                    ], 
                    "version": "5.4.0", 
                    "soft_file_from_host_os": "yes", 
                    "tool_postfix": "-5", 
                    "soft_file": {
                      "win": "gcc.exe", 
                      "linux": "gcc"
                    }, 
                    "retarget": "no", 
                    "search_numeric_ext_on_linux": "yes", 
                    "add_to_path": "yes", 
                    "add_only_with_version": "yes", 
                    "version_split": [
                      5, 
                      4, 
                      0
                    ], 
                    "limit_recursion_dir_search": {
                      "win": 4, 
                      "linux": 3
                    }, 
                    "check_that_exists": "yes", 
                    "ck_version": 10, 
                    "only_for_target_os_tags": [
                      "mingw", 
                      "windows", 
                      "linux"
                    ], 
                    "full_path": "/usr/bin/gcc-5"
                  }, 
                  "setup": {
                    "version_split": [
                      5, 
                      4, 
                      0
                    ], 
                    "target_os_bits": "64", 
                    "version": "5.4.0", 
                    "host_os_uoa": "4258b5fe54828a50", 
                    "target_os_uoa": "4258b5fe54828a50"
                  }, 
                  "data_name": "GNU C compiler", 
                  "soft_uoa": "3a8a82fa40bf992d", 
                  "env": {
                    "CK_FLAGS_DYNAMIC_BIN": " ", 
                    "CK_COMPILER_FLAGS_OBLIGATORY": "", 
                    "CK_AR": "ar", 
                    "CK_COMPILER_POSTFIX": "-5", 
                    "CK_PROFILER": "gprof", 
                    "CK_FLAGS_DLL_EXTRA": "", 
                    "CK_LIB_EXT": ".a", 
                    "CK_OPT_SIZE": "-Os", 
                    "CK_OPT_SPEED": "-O3", 
                    "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
                    "CK_CC": "gcc-5", 
                    "CK_COMPILER_FLAG_GPROF": "-pg", 
                    "CK_OPT_ALL_WARNINGS": "-Wall", 
                    "CK_LB_OUTPUT": "-o ", 
                    "CK_FLAGS_STATIC_LIB": "-fPIC", 
                    "CK_FLAG_PREFIX_VAR": "-D", 
                    "CK_EXTRA_LIB_M": "-lm", 
                    "CK_FLAG_PREFIX_LIB_DIR": "-L", 
                    "CK_FLAGS_CREATE_OBJ": "-c", 
                    "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
                    "CK_OPT_UNWIND": " ", 
                    "CK_OBJ_EXT": ".o", 
                    "CK_FLAGS_OUTPUT": "-o ", 
                    "CK_LB": "ar rcs", 
                    "CK_LD": "ld", 
                    "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
                    "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
                    "CK_PLUGIN_FLAG": "-fplugin=", 
                    "CK_OPT_SPEED_SAFE": "-O2", 
                    "CK_DLL_EXT": ".so", 
                    "CK_CXX": "g++-5", 
                    "CK_ASM_EXT": ".s", 
                    "CK_FLAG_PREFIX_INCLUDE": "-I", 
                    "CK_LD_FLAGS_EXTRA": "", 
                    "CK_OBJDUMP": "objdump -d", 
                    "CK_EXE_EXT": ".out", 
                    "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
                    "CK_FLAGS_DLL": "-shared -fPIC", 
                    "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
                    "CK_ENV_COMPILER_GCC": "/usr", 
                    "CK_EXTRA_LIB_DL": "-ldl", 
                    "CK_GPROF_OUT_FILE": "gmon.out", 
                    "CK_MAKE": "make", 
                    "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
                    "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
                    "CK_FLAGS_CREATE_ASM": "-S"
                  }, 
                  "soft_alias": "compiler.gcc"
                }, 
                "local": "yes"
              }, 
              "cmake": {
                "detected_ver": "3.5.1", 
                "sort": 5, 
                "bat": ". /home/nikolay/CK/local/env/2564764d7438cbf6/env.sh\n", 
                "ver": "3.5.1", 
                "name": "cmake", 
                "tags": "tool,cmake", 
                "build_dir_name": "cmake", 
                "uoa": "2564764d7438cbf6", 
                "choices": [
                  "2564764d7438cbf6"
                ], 
                "num_entries": 1, 
                "dict": {
                  "env_script": "env.sh", 
                  "deps": {}, 
                  "tags": [
                    "64bits", 
                    "cmake", 
                    "host-os-linux-64", 
                    "target-os-linux-64", 
                    "tool", 
                    "v3", 
                    "v3.5", 
                    "v3.5.1"
                  ], 
                  "customize": {
                    "soft_version_cmd": {
                      "win": "--version > $#filename#$ 2>&1", 
                      "linux": "--version > $#filename#$ 2>&1"
                    }, 
                    "only_for_host_os_tags": [
                      "windows", 
                      "linux"
                    ], 
                    "build_dir_name": "cmake", 
                    "skip_path": "yes", 
                    "soft_file_from_host_os": "yes", 
                    "soft_file": {
                      "win": "cmake.exe", 
                      "linux": "cmake"
                    }, 
                    "version": "3.5.1", 
                    "add_to_path": "yes", 
                    "add_only_with_version": "yes", 
                    "limit_recursion_dir_search": {
                      "win": 3, 
                      "linux": 3
                    }, 
                    "version_split": [
                      3, 
                      5, 
                      1
                    ], 
                    "full_path": "/usr/bin/cmake", 
                    "check_that_exists": "yes", 
                    "soft_path_example": {
                      "win": "C:\\Program Files (x86)\\CMake\\bin\\cmake.exe", 
                      "linux": "/usr/bin/cmake"
                    }, 
                    "ck_version": 10, 
                    "env_prefix": "CK_ENV_TOOL_CMAKE"
                  }, 
                  "setup": {
                    "version_split": [
                      3, 
                      5, 
                      1
                    ], 
                    "target_os_bits": "64", 
                    "version": "3.5.1", 
                    "host_os_uoa": "4258b5fe54828a50", 
                    "target_os_uoa": "4258b5fe54828a50"
                  }, 
                  "data_name": "cmake", 
                  "soft_uoa": "77ef5e31404d9589", 
                  "env": {
                    "CK_ENV_TOOL_CMAKE_BIN": "/usr/bin", 
                    "CK_ENV_TOOL_CMAKE": "/usr", 
                    "CK_CMAKE": "cmake"
                  }, 
                  "soft_alias": "tool.cmake"
                }, 
                "local": "yes"
              }
            }, 
            "tags": [
              "64bits", 
              "host-os-linux-64", 
              "lib", 
              "protobuf-host", 
              "target-os-linux-64", 
              "v3", 
              "v3.1", 
              "v3.1.0"
            ], 
            "customize": {
              "version": "3.1.0", 
              "install_env": {
                "PACKAGE_FLAGS_LINUX": "-fPIC", 
                "PACKAGE_NAME2": "v3.1.0", 
                "PACKAGE_NAME1": "v3.1.0.tar", 
                "PACKAGE_NAME": "v3.1.0.tar.gz", 
                "PACKAGE_RENAME": "YES", 
                "PACKAGE_CONFIGURE_FLAGS_WINDOWS": "-Dprotobuf_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=OFF", 
                "PACKAGE_UNGZIP": "YES", 
                "CMAKE_CONFIG": "Release", 
                "PACKAGE_AUTOGEN": "NO", 
                "PACKAGE_BUILD_TYPE": "cmake", 
                "PACKAGE_SUB_DIR": "protobuf-3.1.0", 
                "PACKAGE_WGET": "YES", 
                "PACKAGE_UNTAR": "YES", 
                "PACKAGE_URL": "https://github.com/google/protobuf/archive", 
                "PACKAGE_UNTAR_SKIP_ERROR_WIN": "YES", 
                "PACKAGE_SUB_DIR1": "protobuf-3.1.0/cmake", 
                "PACKAGE_CONFIGURE_FLAGS": "-Dprotobuf_BUILD_TESTS=OFF"
              }, 
              "dynamic_lib": "libprotobuf.so", 
              "static_lib": "libprotobuf.a", 
              "skip_path": "yes", 
              "soft_path_example": {
                "linux": ""
              }, 
              "path_include": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/include", 
              "path_bin": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/bin", 
              "add_to_path": "yes", 
              "full_path": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/lib/libprotobuf.a", 
              "extra_dir": "", 
              "version_split": [
                3, 
                1, 
                0
              ], 
              "limit_recursion_dir_search": {
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "soft_file": {
                "linux": "libprotobuf.so"
              }, 
              "ck_version": 10, 
              "env_prefix": "CK_ENV_LIB_PROTOBUF_HOST", 
              "path_lib": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/lib"
            }, 
            "setup": {
              "deps_cmake": "2564764d7438cbf6", 
              "target_os_uoa": "4258b5fe54828a50", 
              "version": "3.1.0", 
              "version_split": [
                3, 
                1, 
                0
              ], 
              "target_os_bits": "64", 
              "host_os_uoa": "4258b5fe54828a50", 
              "deps_host-compiler": "92584cbdaf8ec6d0"
            }, 
            "data_name": "ProtoBuf host library", 
            "package_uoa": "f29a57f84a06db4b", 
            "soft_uoa": "57c5f409aaf1ceed", 
            "env": {
              "CK_ENV_LIB_PROTOBUF_HOST_LFLAG": "-lprotobuf", 
              "CK_ENV_LIB_PROTOBUF_HOST": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install", 
              "CK_ENV_LIB_PROTOBUF_HOST_DYNAMIC_NAME": "libprotobuf.so", 
              "CK_ENV_LIB_PROTOBUF_HOST_STATIC_NAME": "libprotobuf.a"
            }, 
            "soft_alias": "lib.protobuf.host"
          }, 
          "local": "yes", 
          "force_target_as_host": "yes"
        }, 
        "lib-viennacl": {
          "sort": 35, 
          "bat": ". /home/nikolay/CK/local/env/2d26281504e3691b/env.sh\n", 
          "ver": "master-888a5db", 
          "name": "ViennaCL library", 
          "tags": "lib,viennacl,vcpu", 
          "skip_default": "yes", 
          "uoa": "2d26281504e3691b", 
          "choices": [
            "2d26281504e3691b"
          ], 
          "num_entries": 1, 
          "local": "yes"
        }, 
        "lib-gflags": {
          "skip_installed": {
            "win": "yes", 
            "android": "yes", 
            "linux": "yes"
          }, 
          "sort": 12, 
          "bat": ". /home/nikolay/CK/local/env/057ad35f54f5ab94/env.sh\n", 
          "ver": "2.2.0", 
          "name": "GFlags library", 
          "tags": "lib,gflags", 
          "uoa": "057ad35f54f5ab94", 
          "choices": [
            "057ad35f54f5ab94", 
            "1834d1980189229e"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {
              "cmake": {
                "detected_ver": "3.5.1", 
                "sort": 5, 
                "bat": ". /home/nikolay/CK/local/env/2564764d7438cbf6/env.sh\n", 
                "ver": "3.5.1", 
                "name": "cmake", 
                "tags": "tool,cmake", 
                "build_dir_name": "cmake", 
                "uoa": "2564764d7438cbf6", 
                "choices": [
                  "2564764d7438cbf6"
                ], 
                "num_entries": 1, 
                "dict": {
                  "env_script": "env.sh", 
                  "deps": {}, 
                  "tags": [
                    "64bits", 
                    "cmake", 
                    "host-os-linux-64", 
                    "target-os-linux-64", 
                    "tool", 
                    "v3", 
                    "v3.5", 
                    "v3.5.1"
                  ], 
                  "customize": {
                    "soft_version_cmd": {
                      "win": "--version > $#filename#$ 2>&1", 
                      "linux": "--version > $#filename#$ 2>&1"
                    }, 
                    "only_for_host_os_tags": [
                      "windows", 
                      "linux"
                    ], 
                    "build_dir_name": "cmake", 
                    "skip_path": "yes", 
                    "soft_file_from_host_os": "yes", 
                    "soft_file": {
                      "win": "cmake.exe", 
                      "linux": "cmake"
                    }, 
                    "version": "3.5.1", 
                    "add_to_path": "yes", 
                    "add_only_with_version": "yes", 
                    "limit_recursion_dir_search": {
                      "win": 3, 
                      "linux": 3
                    }, 
                    "version_split": [
                      3, 
                      5, 
                      1
                    ], 
                    "full_path": "/usr/bin/cmake", 
                    "check_that_exists": "yes", 
                    "soft_path_example": {
                      "win": "C:\\Program Files (x86)\\CMake\\bin\\cmake.exe", 
                      "linux": "/usr/bin/cmake"
                    }, 
                    "ck_version": 10, 
                    "env_prefix": "CK_ENV_TOOL_CMAKE"
                  }, 
                  "setup": {
                    "version_split": [
                      3, 
                      5, 
                      1
                    ], 
                    "target_os_bits": "64", 
                    "version": "3.5.1", 
                    "host_os_uoa": "4258b5fe54828a50", 
                    "target_os_uoa": "4258b5fe54828a50"
                  }, 
                  "data_name": "cmake", 
                  "soft_uoa": "77ef5e31404d9589", 
                  "env": {
                    "CK_ENV_TOOL_CMAKE_BIN": "/usr/bin", 
                    "CK_ENV_TOOL_CMAKE": "/usr", 
                    "CK_CMAKE": "cmake"
                  }, 
                  "soft_alias": "tool.cmake"
                }, 
                "local": "yes", 
                "force_target_as_host": "yes"
              }, 
              "compiler": {
                "detected_ver": "5.4.0", 
                "sort": 0, 
                "bat": ". /home/nikolay/CK/local/env/92584cbdaf8ec6d0/env.sh\n", 
                "cus": {
                  "can_strip_dynamic_lib": "yes", 
                  "build_dir_name": "gcc", 
                  "skip_path": "yes", 
                  "tool_prefix_configured": "yes", 
                  "tool_prefix": "", 
                  "tool_postfix_configured": "yes", 
                  "env_prefix": "CK_ENV_COMPILER_GCC", 
                  "soft_version_cmd": {
                    "win": " --version > $#filename#$ 2>&1", 
                    "linux": "--version > $#filename#$ 2>&1"
                  }, 
                  "soft_path_example": {
                    "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                    "linux": "/usr/bin/gcc"
                  }, 
                  "languages": [
                    "C", 
                    "CPP"
                  ], 
                  "version": "5.4.0", 
                  "soft_file_from_host_os": "yes", 
                  "tool_postfix": "-5", 
                  "soft_file": {
                    "win": "gcc.exe", 
                    "linux": "gcc"
                  }, 
                  "retarget": "no", 
                  "search_numeric_ext_on_linux": "yes", 
                  "add_to_path": "yes", 
                  "add_only_with_version": "yes", 
                  "version_split": [
                    5, 
                    4, 
                    0
                  ], 
                  "limit_recursion_dir_search": {
                    "win": 4, 
                    "linux": 3
                  }, 
                  "check_that_exists": "yes", 
                  "ck_version": 10, 
                  "only_for_target_os_tags": [
                    "mingw", 
                    "windows", 
                    "linux"
                  ], 
                  "full_path": "/usr/bin/gcc-5"
                }, 
                "name": "C++ compiler", 
                "tags": "compiler,lang-cpp", 
                "build_dir_name": "gcc", 
                "uoa": "92584cbdaf8ec6d0", 
                "choices": [
                  "92584cbdaf8ec6d0"
                ], 
                "num_entries": 1, 
                "dict": {
                  "env_script": "env.sh", 
                  "deps": {}, 
                  "tags": [
                    "64bits", 
                    "compiler", 
                    "gcc", 
                    "host-os-linux-64", 
                    "lang-c", 
                    "lang-cpp", 
                    "target-os-linux-64", 
                    "v5", 
                    "v5.4", 
                    "v5.4.0"
                  ], 
                  "customize": {
                    "can_strip_dynamic_lib": "yes", 
                    "build_dir_name": "gcc", 
                    "skip_path": "yes", 
                    "tool_prefix_configured": "yes", 
                    "tool_prefix": "", 
                    "tool_postfix_configured": "yes", 
                    "env_prefix": "CK_ENV_COMPILER_GCC", 
                    "soft_version_cmd": {
                      "win": " --version > $#filename#$ 2>&1", 
                      "linux": "--version > $#filename#$ 2>&1"
                    }, 
                    "soft_path_example": {
                      "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                      "linux": "/usr/bin/gcc"
                    }, 
                    "languages": [
                      "C", 
                      "CPP"
                    ], 
                    "version": "5.4.0", 
                    "soft_file_from_host_os": "yes", 
                    "tool_postfix": "-5", 
                    "soft_file": {
                      "win": "gcc.exe", 
                      "linux": "gcc"
                    }, 
                    "retarget": "no", 
                    "search_numeric_ext_on_linux": "yes", 
                    "add_to_path": "yes", 
                    "add_only_with_version": "yes", 
                    "version_split": [
                      5, 
                      4, 
                      0
                    ], 
                    "limit_recursion_dir_search": {
                      "win": 4, 
                      "linux": 3
                    }, 
                    "check_that_exists": "yes", 
                    "ck_version": 10, 
                    "only_for_target_os_tags": [
                      "mingw", 
                      "windows", 
                      "linux"
                    ], 
                    "full_path": "/usr/bin/gcc-5"
                  }, 
                  "setup": {
                    "version_split": [
                      5, 
                      4, 
                      0
                    ], 
                    "target_os_bits": "64", 
                    "version": "5.4.0", 
                    "host_os_uoa": "4258b5fe54828a50", 
                    "target_os_uoa": "4258b5fe54828a50"
                  }, 
                  "data_name": "GNU C compiler", 
                  "soft_uoa": "3a8a82fa40bf992d", 
                  "env": {
                    "CK_FLAGS_DYNAMIC_BIN": " ", 
                    "CK_COMPILER_FLAGS_OBLIGATORY": "", 
                    "CK_AR": "ar", 
                    "CK_COMPILER_POSTFIX": "-5", 
                    "CK_PROFILER": "gprof", 
                    "CK_FLAGS_DLL_EXTRA": "", 
                    "CK_LIB_EXT": ".a", 
                    "CK_OPT_SIZE": "-Os", 
                    "CK_OPT_SPEED": "-O3", 
                    "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
                    "CK_CC": "gcc-5", 
                    "CK_COMPILER_FLAG_GPROF": "-pg", 
                    "CK_OPT_ALL_WARNINGS": "-Wall", 
                    "CK_LB_OUTPUT": "-o ", 
                    "CK_FLAGS_STATIC_LIB": "-fPIC", 
                    "CK_FLAG_PREFIX_VAR": "-D", 
                    "CK_EXTRA_LIB_M": "-lm", 
                    "CK_FLAG_PREFIX_LIB_DIR": "-L", 
                    "CK_FLAGS_CREATE_OBJ": "-c", 
                    "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
                    "CK_OPT_UNWIND": " ", 
                    "CK_OBJ_EXT": ".o", 
                    "CK_FLAGS_OUTPUT": "-o ", 
                    "CK_LB": "ar rcs", 
                    "CK_LD": "ld", 
                    "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
                    "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
                    "CK_PLUGIN_FLAG": "-fplugin=", 
                    "CK_OPT_SPEED_SAFE": "-O2", 
                    "CK_DLL_EXT": ".so", 
                    "CK_CXX": "g++-5", 
                    "CK_ASM_EXT": ".s", 
                    "CK_FLAG_PREFIX_INCLUDE": "-I", 
                    "CK_LD_FLAGS_EXTRA": "", 
                    "CK_OBJDUMP": "objdump -d", 
                    "CK_EXE_EXT": ".out", 
                    "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
                    "CK_FLAGS_DLL": "-shared -fPIC", 
                    "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
                    "CK_ENV_COMPILER_GCC": "/usr", 
                    "CK_EXTRA_LIB_DL": "-ldl", 
                    "CK_GPROF_OUT_FILE": "gmon.out", 
                    "CK_MAKE": "make", 
                    "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
                    "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
                    "CK_FLAGS_CREATE_ASM": "-S"
                  }, 
                  "soft_alias": "compiler.gcc"
                }, 
                "ver": "5.4.0", 
                "local": "yes"
              }
            }, 
            "tags": [
              "64bits", 
              "gflags", 
              "host-os-linux-64", 
              "lib", 
              "target-os-linux-64", 
              "v2", 
              "v2.2", 
              "v2.2.0"
            ], 
            "customize": {
              "git_src_dir": "src", 
              "install_env": {
                "PACKAGE_NAME2": "v2.2.0", 
                "PACKAGE_NAME1": "v2.2.0.tar", 
                "PACKAGE_NAME": "v2.2.0.tar.gz", 
                "PACKAGE_RENAME": "YES", 
                "PACKAGE_CONFIGURE_FLAGS_WINDOWS": "-DBUILD_SHARED_LIBS=ON", 
                "PACKAGE_UNGZIP": "YES", 
                "CMAKE_CONFIG": "Release", 
                "PACKAGE_BUILD_TYPE": "cmake", 
                "PACKAGE_SUB_DIR": "gflags-2.2.0", 
                "PACKAGE_WGET": "YES", 
                "PACKAGE_UNTAR": "YES", 
                "PACKAGE_CONFIGURE_FLAGS_LINUX": "-DBUILD_SHARED_LIBS=ON -DBUILD_STATIC_LIBS=ON", 
                "PACKAGE_URL": "https://github.com/gflags/gflags/archive", 
                "PACKAGE_CONFIGURE_FLAGS_ANDROID": "-DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF", 
                "PACKAGE_UNTAR_SKIP_ERROR_WIN": "YES", 
                "PACKAGE_SUB_DIR1": "gflags-2.2.0", 
                "PACKAGE_CONFIGURE_FLAGS": ""
              }, 
              "dynamic_lib": "libgflags.so", 
              "static_lib": "libgflags.a", 
              "skip_path": "yes", 
              "path_include": "/home/nikolay/CK-TOOLS/lib-gflags-2.2.0-gcc-5.4.0-linux-64/install/include", 
              "version": "2.2.0", 
              "soft_path_example": {
                "win": "", 
                "linux": "/usr/lib/x86_64-linux-gnu/libgflags.so"
              }, 
              "env_prefix": "CK_ENV_LIB_GFLAGS", 
              "extra_dir": "", 
              "version_split": [
                2, 
                2, 
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 3, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "soft_file": {
                "win": "gflags.lib", 
                "linux": "libgflags.so"
              }, 
              "ck_version": 10, 
              "full_path": "/home/nikolay/CK-TOOLS/lib-gflags-2.2.0-gcc-5.4.0-linux-64/install/lib/libgflags.a", 
              "path_lib": "/home/nikolay/CK-TOOLS/lib-gflags-2.2.0-gcc-5.4.0-linux-64/install/lib"
            }, 
            "setup": {
              "deps_compiler": "92584cbdaf8ec6d0", 
              "deps_cmake": "2564764d7438cbf6", 
              "version": "2.2.0", 
              "version_split": [
                2, 
                2, 
                0
              ], 
              "target_os_bits": "64", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "GFlags library", 
            "package_uoa": "160d8d49aa9f0225", 
            "soft_uoa": "64abac44465943ea", 
            "env": {
              "CK_ENV_LIB_GFLAGS": "/home/nikolay/CK-TOOLS/lib-gflags-2.2.0-gcc-5.4.0-linux-64/install", 
              "CK_ENV_LIB_GFLAGS_DYNAMIC_NAME": "libgflags.so", 
              "CK_ENV_LIB_GFLAGS_STATIC_NAME": "libgflags.a", 
              "CK_ENV_LIB_GFLAGS_LFLAG": "-lgflags"
            }, 
            "soft_alias": "lib.gflags"
          }, 
          "local": "yes"
        }, 
        "lib-protobuf": {
          "skip_installed": {
            "win": "yes", 
            "android": "yes"
          }, 
          "sort": 16, 
          "name": "ProtoBuf library", 
          "tags": "lib,protobuf,v3.1.0", 
          "only_for_target_os_tags": [
            "android"
          ], 
          "local": "yes"
        }, 
        "lib-glog": {
          "skip_installed": {
            "win": "yes", 
            "android": "yes", 
            "linux": "yes"
          }, 
          "sort": 14, 
          "bat": ". /home/nikolay/CK/local/env/452694c8cdc22508/env.sh\n", 
          "ver": "0", 
          "name": "GLog library", 
          "tags": "lib,glog", 
          "uoa": "452694c8cdc22508", 
          "choices": [
            "452694c8cdc22508"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "glog", 
              "host-os-linux-64", 
              "lib", 
              "target-os-linux-64", 
              "v0"
            ], 
            "customize": {
              "dynamic_lib": "libglog.so", 
              "static_lib": "libglog.a", 
              "skip_path": "yes", 
              "path_include": "/usr/include", 
              "version": "0", 
              "soft_path_example": {
                "win": "", 
                "linux": "/usr/lib/x86_64-linux-gnu/libglog.so"
              }, 
              "env_prefix": "CK_ENV_LIB_GLOG", 
              "version_split": [
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 3, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "soft_file": {
                "win": "glog.lib", 
                "linux": "libglog.so"
              }, 
              "ck_version": 10, 
              "full_path": "/usr/lib/x86_64-linux-gnu/libglog.so", 
              "path_lib": "/usr/lib/x86_64-linux-gnu"
            }, 
            "setup": {
              "version_split": [
                0
              ], 
              "target_os_bits": "64", 
              "version": "0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "GLog library", 
            "soft_uoa": "d42a1422abbcbb6a", 
            "env": {
              "CK_ENV_LIB_GLOG": "/usr", 
              "CK_ENV_LIB_GLOG_DYNAMIC_NAME": "libglog.so", 
              "CK_ENV_LIB_GLOG_LFLAG": "-lglog", 
              "CK_ENV_LIB_GLOG_STATIC_NAME": "libglog.a"
            }, 
            "soft_alias": "lib.glog"
          }, 
          "local": "yes"
        }, 
        "lib-opencv": {
          "skip_installed": {
            "win": "yes", 
            "android": "yes"
          }, 
          "sort": 20, 
          "bat": ". /home/nikolay/CK/local/env/570dc1e4d30a1447/env.sh\n", 
          "ver": "2.4", 
          "name": "OpenCV library", 
          "tags": "lib,opencv", 
          "uoa": "570dc1e4d30a1447", 
          "choices": [
            "570dc1e4d30a1447"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "host-os-linux-64", 
              "lib", 
              "opencv", 
              "target-os-linux-64", 
              "v2", 
              "v2.4"
            ], 
            "customize": {
              "path_static_lib": "/usr/lib/x86_64-linux-gnu", 
              "dynamic_lib": "libopencv_core.so", 
              "skip_path": "yes", 
              "path_lib": "/usr/lib/x86_64-linux-gnu", 
              "soft_file": {
                "win": "opencv_annotation.exe", 
                "linux": "libopencv_core.so"
              }, 
              "path_include": "/usr/include", 
              "version": "2.4", 
              "soft_path_example": {
                "linux": "/usr/lib/x86_64-linux-gnu/libopencv_core.so"
              }, 
              "env_prefix": "CK_ENV_LIB_OPENCV", 
              "version_split": [
                2, 
                4
              ], 
              "limit_recursion_dir_search": {
                "win": 5, 
                "linux": 4
              }, 
              "check_that_exists": "yes", 
              "path_dynamic_lib": "/usr/lib/x86_64-linux-gnu", 
              "ck_version": 10, 
              "full_path": "/usr/lib/x86_64-linux-gnu/libopencv_core.so", 
              "extra_dynamic_libs": {
                "opencv_highgui": "libopencv_highgui.so", 
                "opencv_ocl": "libopencv_ocl.so", 
                "opencv_imgproc": "libopencv_imgproc.so"
              }
            }, 
            "setup": {
              "version_split": [
                2, 
                4
              ], 
              "target_os_bits": "64", 
              "version": "2.4", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "OpenCV library", 
            "soft_uoa": "18eb79fe079438fb", 
            "env": {
              "CK_ENV_LIB_OPENCV_LFLAG_HIGHGUI": "-lopencv_highgui", 
              "CK_ENV_LIB_OPENCV_LFLAG_IMGPROC": "-lopencv_imgproc", 
              "CK_ENV_LIB_OPENCV_DYNAMIC_LIB_PATH": "/usr/lib/x86_64-linux-gnu", 
              "CK_ENV_LIB_OPENCV_LFLAG_CORE": "-lopencv_core", 
              "CK_ENV_LIB_OPENCV_STATIC_LIB_PATH": "/usr/lib/x86_64-linux-gnu", 
              "CK_ENV_LIB_OPENCV": "/usr"
            }, 
            "soft_alias": "lib.opencv"
          }, 
          "local": "yes"
        }, 
        "lib-opencl": {
          "skip_installed": {
            "android": "yes"
          }, 
          "sort": 11, 
          "bat": ". /home/nikolay/CK/local/env/8345ea82e31ef1a9/env.sh\n", 
          "ver": "6.3.0.1904", 
          "name": "OpenCL stubs library", 
          "tags": "lib,opencl", 
          "uoa": "8345ea82e31ef1a9", 
          "choices": [
            "8345ea82e31ef1a9"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "host-os-linux-64", 
              "lib", 
              "opencl", 
              "target-os-linux-64", 
              "v6", 
              "v6.3", 
              "v6.3.0", 
              "v6.3.0.1904"
            ], 
            "customize": {
              "version": "6.3.0.1904", 
              "dynamic_lib": "libOpenCL.so", 
              "static_lib": "libOpenCL.so", 
              "skip_path": "yes", 
              "path_include": "/opt/intel/intel-opencl-1.2-6.3.0.1904/opencl-sdk/include", 
              "include_name": "CL/opencl.h", 
              "path_bin": "/opt/intel/intel-opencl-1.2-6.3.0.1904/opencl-sdk/bin", 
              "soft_path_example": {
                "win": "C:\\Program Files (x86)\\Intel\\OpenCL SDK\\4.6\\lib\\x64\\OpenCL.lib", 
                "linux": "/usr/lib/libOpenCL.so"
              }, 
              "env_prefix": "CK_ENV_LIB_OPENCL", 
              "version_split": [
                6, 
                3, 
                0, 
                1904
              ], 
              "limit_recursion_dir_search": {
                "win": 4, 
                "linux": 4
              }, 
              "check_that_exists": "yes", 
              "soft_file": {
                "win": "OpenCL.lib", 
                "linux": "libOpenCL.so"
              }, 
              "ck_version": 10, 
              "full_path": "/opt/intel/intel-opencl-1.2-6.3.0.1904/opencl-sdk/lib64/libOpenCL.so", 
              "path_lib": "/opt/intel/intel-opencl-1.2-6.3.0.1904/opencl-sdk/lib64"
            }, 
            "setup": {
              "version_split": [
                6, 
                3, 
                0, 
                1904
              ], 
              "target_os_bits": "64", 
              "version": "6.3.0.1904", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "OpenCL library", 
            "soft_uoa": "6eb9a57038688ad3", 
            "env": {
              "CK_ENV_LIB_OPENCL_DYNAMIC_NAME": "libOpenCL.so", 
              "CK_ENV_LIB_OPENCL_INCLUDE_NAME": "CL/opencl.h", 
              "CK_ENV_LIB_OPENCL_STATIC_NAME": "libOpenCL.so", 
              "CK_ENV_LIB_OPENCL": "/opt/intel/intel-opencl-1.2-6.3.0.1904/opencl-sdk"
            }, 
            "soft_alias": "lib.opencl"
          }, 
          "local": "yes"
        }, 
        "lib-blas": {
          "sort": 30, 
          "bat": ". /home/nikolay/CK/local/env/4178a2f9ab1cc712/env.sh\n", 
          "ver": "0.2.19-85636ff", 
          "name": "BLAS library", 
          "tags": "lib,blas,openblas", 
          "skip_default": "yes", 
          "uoa": "4178a2f9ab1cc712", 
          "choices": [
            "4178a2f9ab1cc712"
          ], 
          "num_entries": 1, 
          "local": "yes"
        }, 
        "lib-hdf5": {
          "skip_installed": {
            "win": "yes"
          }, 
          "sort": 19, 
          "bat": ". /home/nikolay/CK/local/env/82a14b3db296cc85/env.sh\n", 
          "ver": "1.8.16", 
          "name": "HDF5 library", 
          "tags": "lib,hdf5", 
          "uoa": "82a14b3db296cc85", 
          "only_for_target_os_tags": [
            "linux", 
            "windows"
          ], 
          "choices": [
            "82a14b3db296cc85"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "hdf5", 
              "host-os-linux-64", 
              "lib", 
              "target-os-linux-64", 
              "v1", 
              "v1.8", 
              "v1.8.16"
            ], 
            "customize": {
              "include_file": "hdf5.h", 
              "dynamic_lib": "libhdf5.so", 
              "static_lib": "libhdf5.a", 
              "skip_path": "yes", 
              "path_include": "/usr/include/hdf5/serial", 
              "include_name": "hdf5.h", 
              "version": "1.8.16", 
              "soft_path_example": {
                "linux": "/usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5.so"
              }, 
              "env_prefix": "CK_ENV_LIB_HDF5", 
              "version_split": [
                1, 
                8, 
                16
              ], 
              "limit_recursion_dir_search": {
                "linux": 6
              }, 
              "check_that_exists": "yes", 
              "soft_file": {
                "linux": "libhdf5.so"
              }, 
              "ck_version": 10, 
              "full_path": "/usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5.so", 
              "path_lib": "/usr/lib/x86_64-linux-gnu/hdf5/serial"
            }, 
            "setup": {
              "version_split": [
                1, 
                8, 
                16
              ], 
              "target_os_bits": "64", 
              "version": "1.8.16", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "HDF5 library", 
            "soft_uoa": "6d0c245e881231e8", 
            "env": {
              "CK_ENV_LIB_HDF5_STATIC_NAME": "libhdf5.a", 
              "CK_ENV_LIB_HDF5": "/usr/include/hdf5", 
              "CK_ENV_LIB_HDF5_DYNAMIC_NAME": "libhdf5.so", 
              "CK_ENV_LIB_HDF5_INCLUDE_NAME": "hdf5.h"
            }, 
            "soft_alias": "lib.hdf5"
          }, 
          "local": "yes"
        }, 
        "lib-clblast": {
          "sort": 40, 
          "bat": ". /home/nikolay/CK/local/env/5816640328681672/env.sh\n", 
          "ver": "development-fd471e3", 
          "name": "clBLAST library", 
          "tags": "lib,clblast", 
          "skip_default": "yes", 
          "uoa": "5816640328681672", 
          "choices": [
            "5816640328681672"
          ], 
          "num_entries": 1, 
          "local": "yes"
        }, 
        "lib-lmdb": {
          "sort": 18, 
          "bat": ". /home/nikolay/CK/local/env/90e2e1eae9445d8e/env.sh\n", 
          "ver": "0", 
          "name": "LMDB library", 
          "tags": "lib,lmdb", 
          "uoa": "90e2e1eae9445d8e", 
          "only_for_target_os_tags": [
            "linux"
          ], 
          "choices": [
            "90e2e1eae9445d8e"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "host-os-linux-64", 
              "lib", 
              "lmdb", 
              "target-os-linux-64", 
              "v0"
            ], 
            "customize": {
              "path_include": "/usr/include", 
              "skip_path": "yes", 
              "soft_file": {
                "win": "liblmdb.lib", 
                "linux": "liblmdb.so"
              }, 
              "version": "0", 
              "env_prefix": "CK_ENV_LIB_LMDB", 
              "version_split": [
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 3, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "soft_path_example": {
                "win": "", 
                "linux": "/usr/lib/liblmdb.so"
              }, 
              "ck_version": 10, 
              "full_path": "/usr/lib/x86_64-linux-gnu/liblmdb.so", 
              "path_lib": "/usr/lib/x86_64-linux-gnu"
            }, 
            "setup": {
              "version_split": [
                0
              ], 
              "target_os_bits": "64", 
              "version": "0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "LMDB library", 
            "soft_uoa": "a249f58927ceefa5", 
            "env": {
              "CK_ENV_LIB_LMDB": "/usr"
            }, 
            "soft_alias": "lib.lmdb"
          }, 
          "local": "yes"
        }, 
        "lib-boost": {
          "skip_installed": {
            "win": "yes", 
            "android": "yes"
          }, 
          "sort": 25, 
          "bat": ". /home/nikolay/CK/local/env/324414b9d0f34018/env.sh\n", 
          "ver": "1.58.0", 
          "name": "Boost library", 
          "tags": "lib,boost", 
          "uoa": "324414b9d0f34018", 
          "choices": [
            "324414b9d0f34018"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "boost", 
              "host-os-linux-64", 
              "lib", 
              "target-os-linux-64", 
              "v1", 
              "v1.58", 
              "v1.58.0"
            ], 
            "customize": {
              "path_include": "/usr/include", 
              "skip_path": "yes", 
              "soft_file": {
                "win": "libboost_system.lib", 
                "linux": "libboost_system.so"
              }, 
              "version": "1.58.0", 
              "env_prefix": "CK_ENV_LIB_BOOST", 
              "version_split": [
                1, 
                58, 
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 3, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "soft_path_example": {
                "win": "", 
                "linux": "/usr/lib/x86_64-linux-gnu/libboost_system.so"
              }, 
              "ck_version": 10, 
              "full_path": "/usr/lib/x86_64-linux-gnu/libboost_system.so", 
              "path_lib": "/usr/lib/x86_64-linux-gnu"
            }, 
            "setup": {
              "version_split": [
                1, 
                58, 
                0
              ], 
              "target_os_bits": "64", 
              "version": "1.58.0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "Boost library", 
            "soft_uoa": "23949f2a32490faf", 
            "env": {
              "CK_ENV_LIB_BOOST_LFLAG_SYSTEM": "-lboost_system", 
              "CK_ENV_LIB_BOOST": "/usr"
            }, 
            "soft_alias": "lib.boost"
          }, 
          "local": "yes"
        }, 
        "compiler": {
          "detected_ver": "5.4.0", 
          "sort": 0, 
          "bat": ". /home/nikolay/CK/local/env/92584cbdaf8ec6d0/env.sh\n", 
          "cus": {
            "can_strip_dynamic_lib": "yes", 
            "build_dir_name": "gcc", 
            "skip_path": "yes", 
            "tool_prefix_configured": "yes", 
            "tool_prefix": "", 
            "tool_postfix_configured": "yes", 
            "env_prefix": "CK_ENV_COMPILER_GCC", 
            "soft_version_cmd": {
              "win": " --version > $#filename#$ 2>&1", 
              "linux": "--version > $#filename#$ 2>&1"
            }, 
            "soft_path_example": {
              "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
              "linux": "/usr/bin/gcc"
            }, 
            "languages": [
              "C", 
              "CPP"
            ], 
            "version": "5.4.0", 
            "soft_file_from_host_os": "yes", 
            "tool_postfix": "-5", 
            "soft_file": {
              "win": "gcc.exe", 
              "linux": "gcc"
            }, 
            "retarget": "no", 
            "search_numeric_ext_on_linux": "yes", 
            "add_to_path": "yes", 
            "add_only_with_version": "yes", 
            "version_split": [
              5, 
              4, 
              0
            ], 
            "limit_recursion_dir_search": {
              "win": 4, 
              "linux": 3
            }, 
            "check_that_exists": "yes", 
            "ck_version": 10, 
            "only_for_target_os_tags": [
              "mingw", 
              "windows", 
              "linux"
            ], 
            "full_path": "/usr/bin/gcc-5"
          }, 
          "name": "C++ compiler", 
          "tags": "compiler,lang-cpp", 
          "build_dir_name": "gcc", 
          "uoa": "92584cbdaf8ec6d0", 
          "choices": [
            "92584cbdaf8ec6d0"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "compiler", 
              "gcc", 
              "host-os-linux-64", 
              "lang-c", 
              "lang-cpp", 
              "target-os-linux-64", 
              "v5", 
              "v5.4", 
              "v5.4.0"
            ], 
            "customize": {
              "can_strip_dynamic_lib": "yes", 
              "build_dir_name": "gcc", 
              "skip_path": "yes", 
              "tool_prefix_configured": "yes", 
              "tool_prefix": "", 
              "tool_postfix_configured": "yes", 
              "env_prefix": "CK_ENV_COMPILER_GCC", 
              "soft_version_cmd": {
                "win": " --version > $#filename#$ 2>&1", 
                "linux": "--version > $#filename#$ 2>&1"
              }, 
              "soft_path_example": {
                "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                "linux": "/usr/bin/gcc"
              }, 
              "languages": [
                "C", 
                "CPP"
              ], 
              "version": "5.4.0", 
              "soft_file_from_host_os": "yes", 
              "tool_postfix": "-5", 
              "soft_file": {
                "win": "gcc.exe", 
                "linux": "gcc"
              }, 
              "retarget": "no", 
              "search_numeric_ext_on_linux": "yes", 
              "add_to_path": "yes", 
              "add_only_with_version": "yes", 
              "version_split": [
                5, 
                4, 
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 4, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "ck_version": 10, 
              "only_for_target_os_tags": [
                "mingw", 
                "windows", 
                "linux"
              ], 
              "full_path": "/usr/bin/gcc-5"
            }, 
            "setup": {
              "version_split": [
                5, 
                4, 
                0
              ], 
              "target_os_bits": "64", 
              "version": "5.4.0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "GNU C compiler", 
            "soft_uoa": "3a8a82fa40bf992d", 
            "env": {
              "CK_FLAGS_DYNAMIC_BIN": " ", 
              "CK_COMPILER_FLAGS_OBLIGATORY": "", 
              "CK_AR": "ar", 
              "CK_COMPILER_POSTFIX": "-5", 
              "CK_PROFILER": "gprof", 
              "CK_FLAGS_DLL_EXTRA": "", 
              "CK_LIB_EXT": ".a", 
              "CK_OPT_SIZE": "-Os", 
              "CK_OPT_SPEED": "-O3", 
              "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
              "CK_CC": "gcc-5", 
              "CK_COMPILER_FLAG_GPROF": "-pg", 
              "CK_OPT_ALL_WARNINGS": "-Wall", 
              "CK_LB_OUTPUT": "-o ", 
              "CK_FLAGS_STATIC_LIB": "-fPIC", 
              "CK_FLAG_PREFIX_VAR": "-D", 
              "CK_EXTRA_LIB_M": "-lm", 
              "CK_FLAG_PREFIX_LIB_DIR": "-L", 
              "CK_FLAGS_CREATE_OBJ": "-c", 
              "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
              "CK_OPT_UNWIND": " ", 
              "CK_OBJ_EXT": ".o", 
              "CK_FLAGS_OUTPUT": "-o ", 
              "CK_LB": "ar rcs", 
              "CK_LD": "ld", 
              "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
              "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
              "CK_PLUGIN_FLAG": "-fplugin=", 
              "CK_OPT_SPEED_SAFE": "-O2", 
              "CK_DLL_EXT": ".so", 
              "CK_CXX": "g++-5", 
              "CK_ASM_EXT": ".s", 
              "CK_FLAG_PREFIX_INCLUDE": "-I", 
              "CK_LD_FLAGS_EXTRA": "", 
              "CK_OBJDUMP": "objdump -d", 
              "CK_EXE_EXT": ".out", 
              "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
              "CK_FLAGS_DLL": "-shared -fPIC", 
              "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
              "CK_ENV_COMPILER_GCC": "/usr", 
              "CK_EXTRA_LIB_DL": "-ldl", 
              "CK_GPROF_OUT_FILE": "gmon.out", 
              "CK_MAKE": "make", 
              "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
              "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
              "CK_FLAGS_CREATE_ASM": "-S"
            }, 
            "soft_alias": "compiler.gcc"
          }, 
          "ver": "5.4.0", 
          "local": "yes"
        }
      }, 
      "tags": [
        "64bits", 
        "bvlc", 
        "caffe", 
        "host-os-linux-64", 
        "lib", 
        "target-os-linux-64", 
        "v0", 
        "v0.0", 
        "vclblast", 
        "vmaster", 
        "vopencl"
      ], 
      "customize": {
        "git_src_dir": "src", 
        "use_git_revision": "yes", 
        "version": "trunk-a39d297", 
        "install_env": {
          "BUILD_MATLAB": 0, 
          "CMAKE_BUILD_SHARED_LIBS": 0, 
          "PACKAGE_URL_WINDOWS": "https://github.com/BVLC/caffe", 
          "PACKAGE_SKIP_CLEAN_INSTALL": "NO", 
          "USE_GREENTEA": 1, 
          "PACKAGE_SUB_DIR": "src", 
          "USE_FFT": 0, 
          "USE_LIBDNN": 0, 
          "PACKAGE_GIT_CHECKOUT_WINDOWS": "opencl", 
          "PACKAGE_GIT_CHECKOUT_ANDROID": "opencl_cmake_android", 
          "CPU_ONLY": 1, 
          "RUN_LINT": 0, 
          "DISABLE_DEVICE_HOST_UNIFIED_MEMORY": "OFF", 
          "USE_NCCL": 0, 
          "RUN_INSTALL": 0, 
          "USE_CUDNN": 0, 
          "WITH_NINJA": 0, 
          "USE_ISAAC": 0, 
          "PACKAGE_SUB_DIR1": "src", 
          "PACKAGE_GIT_CHECKOUT_LINUX": "opencl_cmake_android", 
          "PACKAGE_SKIP_CLEAN_OBJ": "YES", 
          "BUILD_PYTHON_LAYER": 0, 
          "BUILD_PYTHON": 0, 
          "CMAKE_CONFIG": "Release", 
          "RUN_TESTS": 0, 
          "PYTHON_EXE": "python", 
          "PACKAGE_SKIP_BUILD_ERROR": "YES", 
          "USE_CLBLAST": 1, 
          "USE_INTEL_SPATIAL": "OFF", 
          "PACKAGE_URL_ANDROID": "https://github.com/DVEfremov/caffe", 
          "PACKAGE_PATCH": "YES", 
          "PACKAGE_COPY": "NO", 
          "BLAS_TYPE": "Open", 
          "USE_CLBLAS": 0, 
          "PACKAGE_URL_LINUX": "https://github.com/DVEfremov/caffe", 
          "PACKAGE_CONFIGURE_FLAGS": "", 
          "PACKAGE_BUILD_TYPE": "cmake", 
          "PACKAGE_GIT": "YES", 
          "PACKAGE_SKIP_CLEAN_SRC_DIR": "YES", 
          "USE_CUDA": 0
        }, 
        "dynamic_lib": "libcaffe.so", 
        "static_lib": "libcaffe.a", 
        "git_info": {
          "revision": "a39d297", 
          "iso_datetime_cut_revision": "20170131-a39d297", 
          "iso_datetime_cut": "20170131", 
          "iso_datetime": "2017-01-31T11:57:10", 
          "datetime": "Tue Jan 31 11:57:10 2017 +0700"
        }, 
        "skip_path": "yes", 
        "path_include": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install/include", 
        "path_bin": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install/bin", 
        "env_prefix": "CK_ENV_LIB_CAFFE", 
        "extra_dir": "", 
        "version_split": [
          0, 
          0
        ], 
        "limit_recursion_dir_search": {
          "linux": 4
        }, 
        "check_that_exists": "yes", 
        "soft_file": {
          "linux": "caffe.bin"
        }, 
        "ck_version": 10, 
        "full_path": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install/bin/caffe", 
        "path_lib": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install/lib"
      }, 
      "setup": {
        "deps_lib-opencl": "8345ea82e31ef1a9", 
        "deps_lib-viennacl": "2d26281504e3691b", 
        "deps_compiler": "92584cbdaf8ec6d0", 
        "deps_lib-blas": "4178a2f9ab1cc712", 
        "deps_lib-protobuf-host": "38debf4a898add1c", 
        "deps_lib-gflags": "057ad35f54f5ab94", 
        "target_os_uoa": "4258b5fe54828a50", 
        "deps_lib-clblast": "5816640328681672", 
        "deps_lib-glog": "452694c8cdc22508", 
        "deps_lib-boost": "324414b9d0f34018", 
        "version": "trunk", 
        "deps_lib-lmdb": "90e2e1eae9445d8e", 
        "version_split": [
          0, 
          0
        ], 
        "target_os_bits": "64", 
        "host_os_uoa": "4258b5fe54828a50", 
        "deps_lib-hdf5": "82a14b3db296cc85", 
        "deps_lib-opencv": "570dc1e4d30a1447"
      }, 
      "env_script": "env.sh", 
      "package_uoa": "df78a1afc47a1962", 
      "soft_uoa": "04ab08137582bd03", 
      "env": {
        "CK_CAFFE_CLASSIFICATION_BIN": "classification", 
        "CK_ENV_LIB_CAFFE": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install", 
        "CK_ENV_LIB_CAFFE_EXTRA_INCLUDE": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install/.build_release/src", 
        "CK_ENV_LIB_CAFFE_STATIC_NAME": "libcaffe.a", 
        "CK_CAFFE_BIN": "caffe", 
        "CK_ENV_LIB_CAFFE_DYNAMIC_NAME": "libcaffe.so", 
        "CAFFE_INSTALL_DIR": "/home/nikolay/CK-TOOLS/lib-caffe-bvlc-opencl-clblast-trunk-gcc-5.4.0-linux-64/install"
      }, 
      "soft_alias": "lib.caffe"
    }, 
    "choices": [
      "a019a418cbfc806e", 
      "49f281efab7a7f13"
    ], 
    "local": "yes", 
    "ver": "trunk-a39d297", 
    "skip_pruning_by_other_deps": "yes"
  }, 
  "lib-protobuf-host": {
    "sort": 9, 
    "bat": ". /home/nikolay/CK/local/env/38debf4a898add1c/env.sh\n", 
    "cus": {
      "version": "3.1.0", 
      "install_env": {
        "PACKAGE_FLAGS_LINUX": "-fPIC", 
        "PACKAGE_NAME2": "v3.1.0", 
        "PACKAGE_NAME1": "v3.1.0.tar", 
        "PACKAGE_NAME": "v3.1.0.tar.gz", 
        "PACKAGE_RENAME": "YES", 
        "PACKAGE_CONFIGURE_FLAGS_WINDOWS": "-Dprotobuf_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=OFF", 
        "PACKAGE_UNGZIP": "YES", 
        "CMAKE_CONFIG": "Release", 
        "PACKAGE_AUTOGEN": "NO", 
        "PACKAGE_BUILD_TYPE": "cmake", 
        "PACKAGE_SUB_DIR": "protobuf-3.1.0", 
        "PACKAGE_WGET": "YES", 
        "PACKAGE_UNTAR": "YES", 
        "PACKAGE_URL": "https://github.com/google/protobuf/archive", 
        "PACKAGE_UNTAR_SKIP_ERROR_WIN": "YES", 
        "PACKAGE_SUB_DIR1": "protobuf-3.1.0/cmake", 
        "PACKAGE_CONFIGURE_FLAGS": "-Dprotobuf_BUILD_TESTS=OFF"
      }, 
      "dynamic_lib": "libprotobuf.so", 
      "static_lib": "libprotobuf.a", 
      "skip_path": "yes", 
      "soft_path_example": {
        "linux": ""
      }, 
      "path_include": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/include", 
      "path_bin": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/bin", 
      "add_to_path": "yes", 
      "full_path": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/lib/libprotobuf.a", 
      "extra_dir": "", 
      "version_split": [
        3, 
        1, 
        0
      ], 
      "limit_recursion_dir_search": {
        "linux": 3
      }, 
      "check_that_exists": "yes", 
      "soft_file": {
        "linux": "libprotobuf.so"
      }, 
      "ck_version": 10, 
      "env_prefix": "CK_ENV_LIB_PROTOBUF_HOST", 
      "path_lib": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/lib"
    }, 
    "name": "ProtoBuf HOST library", 
    "tags": "lib,protobuf-host,v3.1.0", 
    "num_entries": 1, 
    "only_for_target_os_tags": [
      "linux", 
      "windows"
    ], 
    "package_uoa": "f29a57f84a06db4b", 
    "uoa": "38debf4a898add1c", 
    "dict": {
      "data_name": "ProtoBuf host library", 
      "deps": {
        "host-compiler": {
          "detected_ver": "6.3.0", 
          "sort": 10, 
          "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
          "ver": "6.3.0", 
          "name": "HOST C++ compiler", 
          "tags": "compiler,lang-cpp", 
          "build_dir_name": "gcc", 
          "uoa": "1a4f96b3790174ff", 
          "choices": [
            "92584cbdaf8ec6d0"
          ], 
          "num_entries": 2, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "compiler", 
              "gcc", 
              "host-os-linux-64", 
              "lang-c", 
              "lang-cpp", 
              "target-os-linux-64", 
              "v6", 
              "v6.3", 
              "v6.3.0"
            ], 
            "customize": {
              "tool_postfix": "-6", 
              "can_strip_dynamic_lib": "yes", 
              "build_dir_name": "gcc", 
              "skip_path": "yes", 
              "tool_prefix_configured": "yes", 
              "tool_prefix": "", 
              "tool_postfix_configured": "yes", 
              "env_prefix": "CK_ENV_COMPILER_GCC", 
              "soft_version_cmd": {
                "win": " --version > $#filename#$ 2>&1", 
                "linux": "--version > $#filename#$ 2>&1"
              }, 
              "soft_path_example": {
                "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                "linux": "/usr/bin/gcc"
              }, 
              "languages": [
                "C", 
                "CPP"
              ], 
              "version": "6.3.0", 
              "soft_file_from_host_os": "yes", 
              "sort": 100, 
              "soft_file": {
                "win": "gcc.exe", 
                "linux": "gcc"
              }, 
              "retarget": "no", 
              "search_numeric_ext_on_linux": "yes", 
              "add_to_path": "yes", 
              "add_only_with_version": "yes", 
              "version_split": [
                6, 
                3, 
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 4, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "ck_version": 10, 
              "only_for_target_os_tags": [
                "mingw", 
                "windows", 
                "linux"
              ], 
              "full_path": "/usr/bin/gcc-6"
            }, 
            "setup": {
              "version_split": [
                6, 
                3, 
                0
              ], 
              "target_os_bits": "64", 
              "version": "6.3.0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "GNU C compiler", 
            "soft_uoa": "3a8a82fa40bf992d", 
            "env": {
              "CK_FLAGS_DYNAMIC_BIN": " ", 
              "CK_COMPILER_FLAGS_OBLIGATORY": "", 
              "CK_AR": "ar", 
              "CK_COMPILER_POSTFIX": "-6", 
              "CK_PROFILER": "gprof", 
              "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
              "CK_LIB_EXT": ".a", 
              "CK_OPT_SIZE": "-Os", 
              "CK_OPT_SPEED": "-O3", 
              "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
              "CK_CC": "gcc-6", 
              "CK_RANLIB": "ranlib", 
              "CK_COMPILER_FLAG_GPROF": "-pg", 
              "CK_OPT_ALL_WARNINGS": "-Wall", 
              "CK_LB_OUTPUT": "-o ", 
              "CK_COMPILER_FLAG_STD90": "-std=c90", 
              "CK_FLAG_PREFIX_VAR": "-D", 
              "CK_FLAGS_STATIC_LIB": "-fPIC", 
              "CK_EXTRA_LIB_M": "-lm", 
              "CK_COMPILER_FLAG_STD99": "-std=c99", 
              "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
              "CK_FLAG_PREFIX_LIB_DIR": "-L", 
              "CK_FLAGS_CREATE_OBJ": "-c", 
              "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
              "CK_OPT_UNWIND": " ", 
              "CK_OBJ_EXT": ".o", 
              "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
              "CK_FLAGS_OUTPUT": "-o ", 
              "CK_LB": "ar rcs", 
              "CK_LD": "ld", 
              "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
              "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
              "CK_PLUGIN_FLAG": "-fplugin=", 
              "CK_OPT_SPEED_SAFE": "-O2", 
              "CK_DLL_EXT": ".so", 
              "CK_CXX": "g++-6", 
              "CK_ASM_EXT": ".s", 
              "CK_FLAG_PREFIX_INCLUDE": "-I", 
              "CK_LD_FLAGS_EXTRA": "", 
              "CK_OBJDUMP": "objdump -d", 
              "CK_EXE_EXT": ".out", 
              "CK_FLAGS_DLL_EXTRA": "", 
              "CK_FLAGS_DLL": "-shared -fPIC", 
              "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
              "CK_ENV_COMPILER_GCC": "/usr", 
              "CK_EXTRA_LIB_DL": "-ldl", 
              "CK_GPROF_OUT_FILE": "gmon.out", 
              "CK_MAKE": "make", 
              "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
              "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
              "CK_FLAGS_CREATE_ASM": "-S"
            }, 
            "soft_alias": "compiler.gcc"
          }, 
          "local": "yes"
        }, 
        "cmake": {
          "detected_ver": "3.5.1", 
          "sort": 5, 
          "bat": ". /home/nikolay/CK/local/env/2564764d7438cbf6/env.sh\n", 
          "ver": "3.5.1", 
          "name": "cmake", 
          "tags": "tool,cmake", 
          "build_dir_name": "cmake", 
          "uoa": "2564764d7438cbf6", 
          "choices": [
            "2564764d7438cbf6"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "cmake", 
              "host-os-linux-64", 
              "target-os-linux-64", 
              "tool", 
              "v3", 
              "v3.5", 
              "v3.5.1"
            ], 
            "customize": {
              "soft_version_cmd": {
                "win": "--version > $#filename#$ 2>&1", 
                "linux": "--version > $#filename#$ 2>&1"
              }, 
              "only_for_host_os_tags": [
                "windows", 
                "linux"
              ], 
              "build_dir_name": "cmake", 
              "skip_path": "yes", 
              "soft_file_from_host_os": "yes", 
              "soft_file": {
                "win": "cmake.exe", 
                "linux": "cmake"
              }, 
              "version": "3.5.1", 
              "add_to_path": "yes", 
              "add_only_with_version": "yes", 
              "limit_recursion_dir_search": {
                "win": 3, 
                "linux": 3
              }, 
              "version_split": [
                3, 
                5, 
                1
              ], 
              "full_path": "/usr/bin/cmake", 
              "check_that_exists": "yes", 
              "soft_path_example": {
                "win": "C:\\Program Files (x86)\\CMake\\bin\\cmake.exe", 
                "linux": "/usr/bin/cmake"
              }, 
              "ck_version": 10, 
              "env_prefix": "CK_ENV_TOOL_CMAKE"
            }, 
            "setup": {
              "version_split": [
                3, 
                5, 
                1
              ], 
              "target_os_bits": "64", 
              "version": "3.5.1", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "cmake", 
            "soft_uoa": "77ef5e31404d9589", 
            "env": {
              "CK_ENV_TOOL_CMAKE_BIN": "/usr/bin", 
              "CK_ENV_TOOL_CMAKE": "/usr", 
              "CK_CMAKE": "cmake"
            }, 
            "soft_alias": "tool.cmake"
          }, 
          "local": "yes"
        }
      }, 
      "tags": [
        "64bits", 
        "host-os-linux-64", 
        "lib", 
        "protobuf-host", 
        "target-os-linux-64", 
        "v3", 
        "v3.1", 
        "v3.1.0"
      ], 
      "customize": {
        "version": "3.1.0", 
        "install_env": {
          "PACKAGE_FLAGS_LINUX": "-fPIC", 
          "PACKAGE_NAME2": "v3.1.0", 
          "PACKAGE_NAME1": "v3.1.0.tar", 
          "PACKAGE_NAME": "v3.1.0.tar.gz", 
          "PACKAGE_RENAME": "YES", 
          "PACKAGE_CONFIGURE_FLAGS_WINDOWS": "-Dprotobuf_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=OFF", 
          "PACKAGE_UNGZIP": "YES", 
          "CMAKE_CONFIG": "Release", 
          "PACKAGE_AUTOGEN": "NO", 
          "PACKAGE_BUILD_TYPE": "cmake", 
          "PACKAGE_SUB_DIR": "protobuf-3.1.0", 
          "PACKAGE_WGET": "YES", 
          "PACKAGE_UNTAR": "YES", 
          "PACKAGE_URL": "https://github.com/google/protobuf/archive", 
          "PACKAGE_UNTAR_SKIP_ERROR_WIN": "YES", 
          "PACKAGE_SUB_DIR1": "protobuf-3.1.0/cmake", 
          "PACKAGE_CONFIGURE_FLAGS": "-Dprotobuf_BUILD_TESTS=OFF"
        }, 
        "dynamic_lib": "libprotobuf.so", 
        "static_lib": "libprotobuf.a", 
        "skip_path": "yes", 
        "soft_path_example": {
          "linux": ""
        }, 
        "path_include": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/include", 
        "path_bin": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/bin", 
        "add_to_path": "yes", 
        "full_path": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/lib/libprotobuf.a", 
        "extra_dir": "", 
        "version_split": [
          3, 
          1, 
          0
        ], 
        "limit_recursion_dir_search": {
          "linux": 3
        }, 
        "check_that_exists": "yes", 
        "soft_file": {
          "linux": "libprotobuf.so"
        }, 
        "ck_version": 10, 
        "env_prefix": "CK_ENV_LIB_PROTOBUF_HOST", 
        "path_lib": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install/lib"
      }, 
      "setup": {
        "deps_cmake": "2564764d7438cbf6", 
        "target_os_uoa": "4258b5fe54828a50", 
        "version": "3.1.0", 
        "version_split": [
          3, 
          1, 
          0
        ], 
        "target_os_bits": "64", 
        "host_os_uoa": "4258b5fe54828a50", 
        "deps_host-compiler": "1a4f96b3790174ff"
      }, 
      "env_script": "env.sh", 
      "package_uoa": "f29a57f84a06db4b", 
      "soft_uoa": "57c5f409aaf1ceed", 
      "env": {
        "CK_ENV_LIB_PROTOBUF_HOST_LFLAG": "-lprotobuf", 
        "CK_ENV_LIB_PROTOBUF_HOST": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/install", 
        "CK_ENV_LIB_PROTOBUF_HOST_DYNAMIC_NAME": "libprotobuf.so", 
        "CK_ENV_LIB_PROTOBUF_HOST_STATIC_NAME": "libprotobuf.a", 
        "CK_ENV_LIB_PROTOBUF_HOST_SRC_DIR": "/home/nikolay/CK-TOOLS/lib-protobuf-host-3.1.0-linux-64/protobuf-3.1.0"
      }, 
      "soft_alias": "lib.protobuf.host"
    }, 
    "ver": "3.1.0", 
    "choices": [
      "38debf4a898add1c"
    ], 
    "local": "yes"
  }, 
  "xopenme": {
    "sort": 100, 
    "bat": ". /home/nikolay/CK/local/env/799de4c0e89eb088/env.sh\n", 
    "cus": {
      "used_package_uid": "0573487b8121d094", 
      "used_package_uoa": "lib-rtl-xopenme", 
      "dynamic_lib": "librtlxopenme.so", 
      "static_lib": "librtlxopenme.a", 
      "skip_path": "yes", 
      "path_include": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/include", 
      "include_name": "xopenme.h", 
      "version": "0.3", 
      "env_prefix": "CK_ENV_LIB_RTL_XOPENME", 
      "extra_dir": "", 
      "version_split": [
        0, 
        3
      ], 
      "full_path": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib/librtlxopenme.a", 
      "path_lib": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib"
    }, 
    "name": "xOpenME library", 
    "tags": "lib,xopenme", 
    "num_entries": 1, 
    "choices": [
      "799de4c0e89eb088"
    ], 
    "uoa": "799de4c0e89eb088", 
    "dict": {
      "data_name": "xOpenME run-time library", 
      "deps": {
        "compiler": {
          "detected_ver": "6.3.0", 
          "sort": 10, 
          "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
          "ver": "6.3.0", 
          "name": "C compiler", 
          "tags": "compiler,lang-c", 
          "build_dir_name": "gcc", 
          "uoa": "1a4f96b3790174ff", 
          "choices": [
            "92584cbdaf8ec6d0"
          ], 
          "num_entries": 2, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "compiler", 
              "gcc", 
              "host-os-linux-64", 
              "lang-c", 
              "lang-cpp", 
              "target-os-linux-64", 
              "v6", 
              "v6.3", 
              "v6.3.0"
            ], 
            "customize": {
              "tool_postfix": "-6", 
              "can_strip_dynamic_lib": "yes", 
              "build_dir_name": "gcc", 
              "skip_path": "yes", 
              "tool_prefix_configured": "yes", 
              "tool_prefix": "", 
              "tool_postfix_configured": "yes", 
              "env_prefix": "CK_ENV_COMPILER_GCC", 
              "soft_version_cmd": {
                "win": " --version > $#filename#$ 2>&1", 
                "linux": "--version > $#filename#$ 2>&1"
              }, 
              "soft_path_example": {
                "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                "linux": "/usr/bin/gcc"
              }, 
              "languages": [
                "C", 
                "CPP"
              ], 
              "version": "6.3.0", 
              "soft_file_from_host_os": "yes", 
              "sort": 100, 
              "soft_file": {
                "win": "gcc.exe", 
                "linux": "gcc"
              }, 
              "retarget": "no", 
              "search_numeric_ext_on_linux": "yes", 
              "add_to_path": "yes", 
              "add_only_with_version": "yes", 
              "version_split": [
                6, 
                3, 
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 4, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "ck_version": 10, 
              "only_for_target_os_tags": [
                "mingw", 
                "windows", 
                "linux"
              ], 
              "full_path": "/usr/bin/gcc-6"
            }, 
            "setup": {
              "version_split": [
                6, 
                3, 
                0
              ], 
              "target_os_bits": "64", 
              "version": "6.3.0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "GNU C compiler", 
            "soft_uoa": "3a8a82fa40bf992d", 
            "env": {
              "CK_FLAGS_DYNAMIC_BIN": " ", 
              "CK_COMPILER_FLAGS_OBLIGATORY": "", 
              "CK_AR": "ar", 
              "CK_COMPILER_POSTFIX": "-6", 
              "CK_PROFILER": "gprof", 
              "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
              "CK_LIB_EXT": ".a", 
              "CK_OPT_SIZE": "-Os", 
              "CK_OPT_SPEED": "-O3", 
              "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
              "CK_CC": "gcc-6", 
              "CK_RANLIB": "ranlib", 
              "CK_COMPILER_FLAG_GPROF": "-pg", 
              "CK_OPT_ALL_WARNINGS": "-Wall", 
              "CK_LB_OUTPUT": "-o ", 
              "CK_COMPILER_FLAG_STD90": "-std=c90", 
              "CK_FLAG_PREFIX_VAR": "-D", 
              "CK_FLAGS_STATIC_LIB": "-fPIC", 
              "CK_EXTRA_LIB_M": "-lm", 
              "CK_COMPILER_FLAG_STD99": "-std=c99", 
              "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
              "CK_FLAG_PREFIX_LIB_DIR": "-L", 
              "CK_FLAGS_CREATE_OBJ": "-c", 
              "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
              "CK_OPT_UNWIND": " ", 
              "CK_OBJ_EXT": ".o", 
              "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
              "CK_FLAGS_OUTPUT": "-o ", 
              "CK_LB": "ar rcs", 
              "CK_LD": "ld", 
              "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
              "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
              "CK_PLUGIN_FLAG": "-fplugin=", 
              "CK_OPT_SPEED_SAFE": "-O2", 
              "CK_DLL_EXT": ".so", 
              "CK_CXX": "g++-6", 
              "CK_ASM_EXT": ".s", 
              "CK_FLAG_PREFIX_INCLUDE": "-I", 
              "CK_LD_FLAGS_EXTRA": "", 
              "CK_OBJDUMP": "objdump -d", 
              "CK_EXE_EXT": ".out", 
              "CK_FLAGS_DLL_EXTRA": "", 
              "CK_FLAGS_DLL": "-shared -fPIC", 
              "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
              "CK_ENV_COMPILER_GCC": "/usr", 
              "CK_EXTRA_LIB_DL": "-ldl", 
              "CK_GPROF_OUT_FILE": "gmon.out", 
              "CK_MAKE": "make", 
              "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
              "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
              "CK_FLAGS_CREATE_ASM": "-S"
            }, 
            "soft_alias": "compiler.gcc"
          }, 
          "local": "yes"
        }
      }, 
      "tags": [
        "64bits", 
        "host-os-linux-64", 
        "lang-c", 
        "lang-cpp", 
        "lang-f77", 
        "lang-f90", 
        "lang-f95", 
        "lib", 
        "rtl", 
        "target-os-linux-64", 
        "v0", 
        "v0.3", 
        "xopenme"
      ], 
      "customize": {
        "used_package_uid": "0573487b8121d094", 
        "used_package_uoa": "lib-rtl-xopenme", 
        "dynamic_lib": "librtlxopenme.so", 
        "static_lib": "librtlxopenme.a", 
        "skip_path": "yes", 
        "path_include": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/include", 
        "include_name": "xopenme.h", 
        "version": "0.3", 
        "env_prefix": "CK_ENV_LIB_RTL_XOPENME", 
        "extra_dir": "", 
        "version_split": [
          0, 
          3
        ], 
        "full_path": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib/librtlxopenme.a", 
        "path_lib": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib"
      }, 
      "setup": {
        "deps_compiler": "1a4f96b3790174ff", 
        "version": "0.3", 
        "version_split": [
          0, 
          3
        ], 
        "target_os_bits": "64", 
        "host_os_uoa": "4258b5fe54828a50", 
        "target_os_uoa": "4258b5fe54828a50"
      }, 
      "env_script": "env.sh", 
      "package_uoa": "0573487b8121d094", 
      "soft_uoa": "673507878d649b4a", 
      "env": {
        "CK_ENV_LIB_RTL_XOPENME_INCLUDE_NAME": "xopenme.h", 
        "CK_ENV_LIB_RTL_XOPENME_DYNAMIC_NAME": "librtlxopenme.so", 
        "CK_ENV_LIB_RTL_XOPENME": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64", 
        "CK_ENV_LIB_RTL_XOPENME_STATIC_NAME": "librtlxopenme.a"
      }, 
      "soft_alias": "lib.rtl.xopenme"
    }, 
    "ver": "0.3", 
    "package_uoa": "0573487b8121d094", 
    "local": "yes"
  }, 
  "lib-blas": {
    "sort": 8, 
    "bat": ". /home/nikolay/CK/local/env/4178a2f9ab1cc712/env.sh\n", 
    "cus": {
      "git_src_dir": "src", 
      "include_file": "cblas.h", 
      "use_git_revision": "yes", 
      "install_env": {
        "PACKAGE_SKIP_CMAKE_TARGET": "YES", 
        "PACKAGE_SKIP_CLEAN_OBJ": "NO", 
        "PACKAGE_SKIP_CLEAN_INSTALL": "NO", 
        "PACKAGE_GIT": "YES", 
        "PACKAGE_AUTOGEN": "NO", 
        "PACKAGE_BUILD_TYPE": "make", 
        "PACKAGE_SKIP_CLEAN_PACKAGE": "NO", 
        "PACKAGE_SUB_DIR": "src", 
        "PACKAGE_GIT_CHECKOUT": "v0.2.19", 
        "PACKAGE_SKIP_CLEAN_SRC_DIR": "NO", 
        "PACKAGE_PATCH": "YES", 
        "PACKAGE_URL": "https://github.com/xianyi/OpenBLAS", 
        "PACKAGE_CONFIGURE_FLAGS_ANDROID": "", 
        "PACKAGE_SUB_DIR1": "src"
      }, 
      "dynamic_lib": "libopenblas.so", 
      "static_lib": "libopenblas.a", 
      "git_info": {
        "revision": "85636ff", 
        "iso_datetime_cut_revision": "20160831-85636ff", 
        "iso_datetime_cut": "20160831", 
        "iso_datetime": "2016-08-31T23:58:42", 
        "datetime": "Wed Aug 31 23:58:42 2016 -0400"
      }, 
      "skip_path": "yes", 
      "path_include": "/home/nikolay/CK-TOOLS/lib-openblas-0.2.19-gcc-5.4.0-linux-64/install/include", 
      "include_name": "cblas.h", 
      "version": "0.2.19-85636ff", 
      "soft_path_example": {
        "linux": "/usr/lib/libopenblas.so"
      }, 
      "env_prefix": "CK_ENV_LIB_OPENBLAS", 
      "extra_dir": "", 
      "version_split": [
        0, 
        2, 
        19, 
        0
      ], 
      "limit_recursion_dir_search": {
        "linux": 3
      }, 
      "check_that_exists": "yes", 
      "soft_file": {
        "linux": "libopenblas.so"
      }, 
      "ck_version": 10, 
      "full_path": "/home/nikolay/CK-TOOLS/lib-openblas-0.2.19-gcc-5.4.0-linux-64/install/lib/libopenblas.a", 
      "path_lib": "/home/nikolay/CK-TOOLS/lib-openblas-0.2.19-gcc-5.4.0-linux-64/install/lib"
    }, 
    "name": "BLAS library", 
    "tags": "lib,blas,openblas", 
    "num_entries": 1, 
    "choices": [
      "4178a2f9ab1cc712"
    ], 
    "uoa": "4178a2f9ab1cc712", 
    "dict": {
      "data_name": "OpenBLAS library", 
      "deps": {
        "compiler-mingw": {
          "sort": 5, 
          "only_for_host_os_tags": [
            "windows"
          ], 
          "skip_from_bat": "yes", 
          "tags": "compiler,lang-c,gcc", 
          "add_to_path": "yes", 
          "local": "yes", 
          "name": "C compiler"
        }, 
        "compiler": {
          "detected_ver": "6.3.0", 
          "sort": 0, 
          "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
          "cus": {
            "can_strip_dynamic_lib": "yes", 
            "build_dir_name": "gcc", 
            "skip_path": "yes", 
            "tool_prefix_configured": "yes", 
            "tool_prefix": "", 
            "tool_postfix_configured": "yes", 
            "env_prefix": "CK_ENV_COMPILER_GCC", 
            "soft_version_cmd": {
              "win": " --version > $#filename#$ 2>&1", 
              "linux": "--version > $#filename#$ 2>&1"
            }, 
            "soft_path_example": {
              "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
              "linux": "/usr/bin/gcc"
            }, 
            "languages": [
              "C", 
              "CPP"
            ], 
            "version": "5.4.0", 
            "soft_file_from_host_os": "yes", 
            "tool_postfix": "-5", 
            "soft_file": {
              "win": "gcc.exe", 
              "linux": "gcc"
            }, 
            "retarget": "no", 
            "search_numeric_ext_on_linux": "yes", 
            "add_to_path": "yes", 
            "add_only_with_version": "yes", 
            "version_split": [
              5, 
              4, 
              0
            ], 
            "limit_recursion_dir_search": {
              "win": 4, 
              "linux": 3
            }, 
            "check_that_exists": "yes", 
            "ck_version": 10, 
            "only_for_target_os_tags": [
              "mingw", 
              "windows", 
              "linux"
            ], 
            "full_path": "/usr/bin/gcc-5"
          }, 
          "name": "C++ compiler", 
          "tags": "compiler,lang-cpp", 
          "build_dir_name": "gcc", 
          "uoa": "1a4f96b3790174ff", 
          "choices": [
            "92584cbdaf8ec6d0"
          ], 
          "num_entries": 2, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "compiler", 
              "gcc", 
              "host-os-linux-64", 
              "lang-c", 
              "lang-cpp", 
              "target-os-linux-64", 
              "v6", 
              "v6.3", 
              "v6.3.0"
            ], 
            "customize": {
              "tool_postfix": "-6", 
              "can_strip_dynamic_lib": "yes", 
              "build_dir_name": "gcc", 
              "skip_path": "yes", 
              "tool_prefix_configured": "yes", 
              "tool_prefix": "", 
              "tool_postfix_configured": "yes", 
              "env_prefix": "CK_ENV_COMPILER_GCC", 
              "soft_version_cmd": {
                "win": " --version > $#filename#$ 2>&1", 
                "linux": "--version > $#filename#$ 2>&1"
              }, 
              "soft_path_example": {
                "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                "linux": "/usr/bin/gcc"
              }, 
              "languages": [
                "C", 
                "CPP"
              ], 
              "version": "6.3.0", 
              "soft_file_from_host_os": "yes", 
              "sort": 100, 
              "soft_file": {
                "win": "gcc.exe", 
                "linux": "gcc"
              }, 
              "retarget": "no", 
              "search_numeric_ext_on_linux": "yes", 
              "add_to_path": "yes", 
              "add_only_with_version": "yes", 
              "version_split": [
                6, 
                3, 
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 4, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "ck_version": 10, 
              "only_for_target_os_tags": [
                "mingw", 
                "windows", 
                "linux"
              ], 
              "full_path": "/usr/bin/gcc-6"
            }, 
            "setup": {
              "version_split": [
                6, 
                3, 
                0
              ], 
              "target_os_bits": "64", 
              "version": "6.3.0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "GNU C compiler", 
            "soft_uoa": "3a8a82fa40bf992d", 
            "env": {
              "CK_FLAGS_DYNAMIC_BIN": " ", 
              "CK_COMPILER_FLAGS_OBLIGATORY": "", 
              "CK_AR": "ar", 
              "CK_COMPILER_POSTFIX": "-6", 
              "CK_PROFILER": "gprof", 
              "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
              "CK_LIB_EXT": ".a", 
              "CK_OPT_SIZE": "-Os", 
              "CK_OPT_SPEED": "-O3", 
              "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
              "CK_CC": "gcc-6", 
              "CK_RANLIB": "ranlib", 
              "CK_COMPILER_FLAG_GPROF": "-pg", 
              "CK_OPT_ALL_WARNINGS": "-Wall", 
              "CK_LB_OUTPUT": "-o ", 
              "CK_COMPILER_FLAG_STD90": "-std=c90", 
              "CK_FLAG_PREFIX_VAR": "-D", 
              "CK_FLAGS_STATIC_LIB": "-fPIC", 
              "CK_EXTRA_LIB_M": "-lm", 
              "CK_COMPILER_FLAG_STD99": "-std=c99", 
              "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
              "CK_FLAG_PREFIX_LIB_DIR": "-L", 
              "CK_FLAGS_CREATE_OBJ": "-c", 
              "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
              "CK_OPT_UNWIND": " ", 
              "CK_OBJ_EXT": ".o", 
              "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
              "CK_FLAGS_OUTPUT": "-o ", 
              "CK_LB": "ar rcs", 
              "CK_LD": "ld", 
              "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
              "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
              "CK_PLUGIN_FLAG": "-fplugin=", 
              "CK_OPT_SPEED_SAFE": "-O2", 
              "CK_DLL_EXT": ".so", 
              "CK_CXX": "g++-6", 
              "CK_ASM_EXT": ".s", 
              "CK_FLAG_PREFIX_INCLUDE": "-I", 
              "CK_LD_FLAGS_EXTRA": "", 
              "CK_OBJDUMP": "objdump -d", 
              "CK_EXE_EXT": ".out", 
              "CK_FLAGS_DLL_EXTRA": "", 
              "CK_FLAGS_DLL": "-shared -fPIC", 
              "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
              "CK_ENV_COMPILER_GCC": "/usr", 
              "CK_EXTRA_LIB_DL": "-ldl", 
              "CK_GPROF_OUT_FILE": "gmon.out", 
              "CK_MAKE": "make", 
              "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
              "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
              "CK_FLAGS_CREATE_ASM": "-S"
            }, 
            "soft_alias": "compiler.gcc"
          }, 
          "ver": "6.3.0", 
          "local": "yes"
        }
      }, 
      "tags": [
        "64bits", 
        "blas", 
        "cblas", 
        "host-os-linux-64", 
        "lib", 
        "openblas", 
        "target-os-linux-64", 
        "v0", 
        "v0.2", 
        "v0.2.19", 
        "v0.2.19.0"
      ], 
      "customize": {
        "git_src_dir": "src", 
        "include_file": "cblas.h", 
        "use_git_revision": "yes", 
        "install_env": {
          "PACKAGE_SKIP_CMAKE_TARGET": "YES", 
          "PACKAGE_SKIP_CLEAN_OBJ": "NO", 
          "PACKAGE_SKIP_CLEAN_INSTALL": "NO", 
          "PACKAGE_GIT": "YES", 
          "PACKAGE_AUTOGEN": "NO", 
          "PACKAGE_BUILD_TYPE": "make", 
          "PACKAGE_SKIP_CLEAN_PACKAGE": "NO", 
          "PACKAGE_SUB_DIR": "src", 
          "PACKAGE_GIT_CHECKOUT": "v0.2.19", 
          "PACKAGE_SKIP_CLEAN_SRC_DIR": "NO", 
          "PACKAGE_PATCH": "YES", 
          "PACKAGE_URL": "https://github.com/xianyi/OpenBLAS", 
          "PACKAGE_CONFIGURE_FLAGS_ANDROID": "", 
          "PACKAGE_SUB_DIR1": "src"
        }, 
        "dynamic_lib": "libopenblas.so", 
        "static_lib": "libopenblas.a", 
        "git_info": {
          "revision": "85636ff", 
          "iso_datetime_cut_revision": "20160831-85636ff", 
          "iso_datetime_cut": "20160831", 
          "iso_datetime": "2016-08-31T23:58:42", 
          "datetime": "Wed Aug 31 23:58:42 2016 -0400"
        }, 
        "skip_path": "yes", 
        "path_include": "/home/nikolay/CK-TOOLS/lib-openblas-0.2.19-gcc-5.4.0-linux-64/install/include", 
        "include_name": "cblas.h", 
        "version": "0.2.19-85636ff", 
        "soft_path_example": {
          "linux": "/usr/lib/libopenblas.so"
        }, 
        "env_prefix": "CK_ENV_LIB_OPENBLAS", 
        "extra_dir": "", 
        "version_split": [
          0, 
          2, 
          19, 
          0
        ], 
        "limit_recursion_dir_search": {
          "linux": 3
        }, 
        "check_that_exists": "yes", 
        "soft_file": {
          "linux": "libopenblas.so"
        }, 
        "ck_version": 10, 
        "full_path": "/home/nikolay/CK-TOOLS/lib-openblas-0.2.19-gcc-5.4.0-linux-64/install/lib/libopenblas.a", 
        "path_lib": "/home/nikolay/CK-TOOLS/lib-openblas-0.2.19-gcc-5.4.0-linux-64/install/lib"
      }, 
      "setup": {
        "deps_compiler": "1a4f96b3790174ff", 
        "version": "0.2.19-85636ff", 
        "version_split": [
          0, 
          2, 
          19, 
          0
        ], 
        "target_os_bits": "64", 
        "host_os_uoa": "4258b5fe54828a50", 
        "target_os_uoa": "4258b5fe54828a50"
      }, 
      "env_script": "env.sh", 
      "package_uoa": "3becaf2cd0422880", 
      "soft_uoa": "252d8364ec25497b", 
      "env": {
        "CK_ENV_LIB_OPENBLAS_INCLUDE_NAME": "cblas.h", 
        "CK_ENV_LIB_OPENBLAS_STATIC_NAME": "libopenblas.a", 
        "CK_ENV_LIB_OPENBLAS": "/home/nikolay/CK-TOOLS/lib-openblas-0.2.19-gcc-5.4.0-linux-64/install", 
        "CK_ENV_LIB_OPENBLAS_DYNAMIC_NAME": "libopenblas.so"
      }, 
      "soft_alias": "lib.openblas"
    }, 
    "ver": "0.2.19-85636ff", 
    "package_uoa": "3becaf2cd0422880", 
    "local": "yes"
  }, 
  "compiler": {
    "sort": 0, 
    "detected_ver": "6.3.0", 
    "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
    "cus": {
      "tool_postfix": "-6", 
      "can_strip_dynamic_lib": "yes", 
      "build_dir_name": "gcc", 
      "skip_path": "yes", 
      "tool_prefix_configured": "yes", 
      "tool_prefix": "", 
      "tool_postfix_configured": "yes", 
      "env_prefix": "CK_ENV_COMPILER_GCC", 
      "soft_version_cmd": {
        "win": " --version > $#filename#$ 2>&1", 
        "linux": "--version > $#filename#$ 2>&1"
      }, 
      "soft_path_example": {
        "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
        "linux": "/usr/bin/gcc"
      }, 
      "languages": [
        "C", 
        "CPP"
      ], 
      "version": "6.3.0", 
      "soft_file_from_host_os": "yes", 
      "sort": 100, 
      "soft_file": {
        "win": "gcc.exe", 
        "linux": "gcc"
      }, 
      "retarget": "no", 
      "search_numeric_ext_on_linux": "yes", 
      "add_to_path": "yes", 
      "add_only_with_version": "yes", 
      "version_split": [
        6, 
        3, 
        0
      ], 
      "limit_recursion_dir_search": {
        "win": 4, 
        "linux": 3
      }, 
      "check_that_exists": "yes", 
      "ck_version": 10, 
      "only_for_target_os_tags": [
        "mingw", 
        "windows", 
        "linux"
      ], 
      "full_path": "/usr/bin/gcc-6"
    }, 
    "name": "C++ compiler", 
    "tags": "compiler,lang-cpp", 
    "build_dir_name": "gcc", 
    "num_entries": 1, 
    "choices": [
      "1a4f96b3790174ff"
    ], 
    "uoa": "1a4f96b3790174ff", 
    "dict": {
      "data_name": "GNU C compiler", 
      "deps": {}, 
      "tags": [
        "64bits", 
        "compiler", 
        "gcc", 
        "host-os-linux-64", 
        "lang-c", 
        "lang-cpp", 
        "target-os-linux-64", 
        "v6", 
        "v6.3", 
        "v6.3.0"
      ], 
      "customize": {
        "tool_postfix": "-6", 
        "can_strip_dynamic_lib": "yes", 
        "build_dir_name": "gcc", 
        "skip_path": "yes", 
        "tool_prefix_configured": "yes", 
        "tool_prefix": "", 
        "tool_postfix_configured": "yes", 
        "env_prefix": "CK_ENV_COMPILER_GCC", 
        "soft_version_cmd": {
          "win": " --version > $#filename#$ 2>&1", 
          "linux": "--version > $#filename#$ 2>&1"
        }, 
        "soft_path_example": {
          "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
          "linux": "/usr/bin/gcc"
        }, 
        "languages": [
          "C", 
          "CPP"
        ], 
        "version": "6.3.0", 
        "soft_file_from_host_os": "yes", 
        "sort": 100, 
        "soft_file": {
          "win": "gcc.exe", 
          "linux": "gcc"
        }, 
        "retarget": "no", 
        "search_numeric_ext_on_linux": "yes", 
        "add_to_path": "yes", 
        "add_only_with_version": "yes", 
        "version_split": [
          6, 
          3, 
          0
        ], 
        "limit_recursion_dir_search": {
          "win": 4, 
          "linux": 3
        }, 
        "check_that_exists": "yes", 
        "ck_version": 10, 
        "only_for_target_os_tags": [
          "mingw", 
          "windows", 
          "linux"
        ], 
        "full_path": "/usr/bin/gcc-6"
      }, 
      "setup": {
        "version_split": [
          6, 
          3, 
          0
        ], 
        "target_os_bits": "64", 
        "version": "6.3.0", 
        "host_os_uoa": "4258b5fe54828a50", 
        "target_os_uoa": "4258b5fe54828a50"
      }, 
      "env_script": "env.sh", 
      "soft_uoa": "3a8a82fa40bf992d", 
      "env": {
        "CK_FLAGS_DYNAMIC_BIN": " ", 
        "CK_COMPILER_FLAGS_OBLIGATORY": "", 
        "CK_AR": "ar", 
        "CK_COMPILER_POSTFIX": "-6", 
        "CK_PROFILER": "gprof", 
        "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
        "CK_LIB_EXT": ".a", 
        "CK_OPT_SIZE": "-Os", 
        "CK_OPT_SPEED": "-O3", 
        "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
        "CK_CC": "gcc-6", 
        "CK_RANLIB": "ranlib", 
        "CK_COMPILER_FLAG_GPROF": "-pg", 
        "CK_OPT_ALL_WARNINGS": "-Wall", 
        "CK_LB_OUTPUT": "-o ", 
        "CK_COMPILER_FLAG_STD90": "-std=c90", 
        "CK_FLAG_PREFIX_VAR": "-D", 
        "CK_FLAGS_STATIC_LIB": "-fPIC", 
        "CK_EXTRA_LIB_M": "-lm", 
        "CK_COMPILER_FLAG_STD99": "-std=c99", 
        "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
        "CK_FLAG_PREFIX_LIB_DIR": "-L", 
        "CK_FLAGS_CREATE_OBJ": "-c", 
        "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
        "CK_OPT_UNWIND": " ", 
        "CK_OBJ_EXT": ".o", 
        "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
        "CK_FLAGS_OUTPUT": "-o ", 
        "CK_LB": "ar rcs", 
        "CK_LD": "ld", 
        "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
        "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
        "CK_PLUGIN_FLAG": "-fplugin=", 
        "CK_OPT_SPEED_SAFE": "-O2", 
        "CK_DLL_EXT": ".so", 
        "CK_CXX": "g++-6", 
        "CK_ASM_EXT": ".s", 
        "CK_FLAG_PREFIX_INCLUDE": "-I", 
        "CK_LD_FLAGS_EXTRA": "", 
        "CK_OBJDUMP": "objdump -d", 
        "CK_EXE_EXT": ".out", 
        "CK_FLAGS_DLL_EXTRA": "", 
        "CK_FLAGS_DLL": "-shared -fPIC", 
        "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
        "CK_ENV_COMPILER_GCC": "/usr", 
        "CK_EXTRA_LIB_DL": "-ldl", 
        "CK_GPROF_OUT_FILE": "gmon.out", 
        "CK_MAKE": "make", 
        "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
        "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
        "CK_FLAGS_CREATE_ASM": "-S"
      }, 
      "soft_alias": "compiler.gcc"
    }, 
    "ver": "6.3.0", 
    "local": "yes"
  }
}
