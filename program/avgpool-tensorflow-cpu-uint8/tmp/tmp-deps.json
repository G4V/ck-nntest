{
  "lib-nntest": {
    "sort": 2, 
    "bat": ". /home/nikolay/CK/local/env/4c19a8e4f5093d05/env.sh\n", 
    "cus": {
      "add_include_path": "yes", 
      "used_package_uid": "a6f6a5e9a44c7999", 
      "skip_add_to_bin": "yes", 
      "path_include": "/home/nikolay/CK-TOOLS/lib-nntest-0.1-gcc-6.3.0-linux-64/install/include", 
      "skip_add_to_path": "yes", 
      "skip_path": "yes", 
      "used_package_uoa": "lib-nntest", 
      "soft_file": {
        "win": "include\\ck_nntest_common.h", 
        "linux": "include/ck_nntest_common.h"
      }, 
      "version": "0.1", 
      "env_prefix": "CK_ENV_LIB_NNTEST", 
      "extra_dir": "", 
      "version_split": [
        0, 
        1
      ], 
      "limit_recursion_dir_search": {
        "win": 4, 
        "linux": 4
      }, 
      "full_path": "/home/nikolay/CK-TOOLS/lib-nntest-0.1-gcc-6.3.0-linux-64/install/include/ck_nntest_common.h"
    }, 
    "name": "NNTest library", 
    "tags": "lib,nntest", 
    "num_entries": 1, 
    "choices": [
      "4c19a8e4f5093d05"
    ], 
    "uoa": "4c19a8e4f5093d05", 
    "dict": {
      "data_name": "NNTest library", 
      "deps": {
        "xopenme": {
          "sort": 100, 
          "bat": ". /home/nikolay/CK/local/env/799de4c0e89eb088/env.sh\n", 
          "ver": "0.3", 
          "name": "xOpenME library", 
          "tags": "lib,xopenme", 
          "uoa": "799de4c0e89eb088", 
          "choices": [
            "799de4c0e89eb088"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {
              "compiler": {
                "detected_ver": "6.3.0", 
                "sort": 10, 
                "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
                "ver": "6.3.0", 
                "name": "C compiler", 
                "tags": "compiler,lang-c", 
                "build_dir_name": "gcc", 
                "uoa": "1a4f96b3790174ff", 
                "choices": [
                  "92584cbdaf8ec6d0"
                ], 
                "num_entries": 2, 
                "dict": {
                  "env_script": "env.sh", 
                  "deps": {}, 
                  "tags": [
                    "64bits", 
                    "compiler", 
                    "gcc", 
                    "host-os-linux-64", 
                    "lang-c", 
                    "lang-cpp", 
                    "target-os-linux-64", 
                    "v6", 
                    "v6.3", 
                    "v6.3.0"
                  ], 
                  "customize": {
                    "tool_postfix": "-6", 
                    "can_strip_dynamic_lib": "yes", 
                    "build_dir_name": "gcc", 
                    "skip_path": "yes", 
                    "tool_prefix_configured": "yes", 
                    "tool_prefix": "", 
                    "tool_postfix_configured": "yes", 
                    "env_prefix": "CK_ENV_COMPILER_GCC", 
                    "soft_version_cmd": {
                      "win": " --version > $#filename#$ 2>&1", 
                      "linux": "--version > $#filename#$ 2>&1"
                    }, 
                    "soft_path_example": {
                      "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                      "linux": "/usr/bin/gcc"
                    }, 
                    "languages": [
                      "C", 
                      "CPP"
                    ], 
                    "version": "6.3.0", 
                    "soft_file_from_host_os": "yes", 
                    "sort": 100, 
                    "soft_file": {
                      "win": "gcc.exe", 
                      "linux": "gcc"
                    }, 
                    "retarget": "no", 
                    "search_numeric_ext_on_linux": "yes", 
                    "add_to_path": "yes", 
                    "add_only_with_version": "yes", 
                    "version_split": [
                      6, 
                      3, 
                      0
                    ], 
                    "limit_recursion_dir_search": {
                      "win": 4, 
                      "linux": 3
                    }, 
                    "check_that_exists": "yes", 
                    "ck_version": 10, 
                    "only_for_target_os_tags": [
                      "mingw", 
                      "windows", 
                      "linux"
                    ], 
                    "full_path": "/usr/bin/gcc-6"
                  }, 
                  "setup": {
                    "version_split": [
                      6, 
                      3, 
                      0
                    ], 
                    "target_os_bits": "64", 
                    "version": "6.3.0", 
                    "host_os_uoa": "4258b5fe54828a50", 
                    "target_os_uoa": "4258b5fe54828a50"
                  }, 
                  "data_name": "GNU C compiler", 
                  "soft_uoa": "3a8a82fa40bf992d", 
                  "env": {
                    "CK_FLAGS_DYNAMIC_BIN": " ", 
                    "CK_COMPILER_FLAGS_OBLIGATORY": "", 
                    "CK_AR": "ar", 
                    "CK_COMPILER_POSTFIX": "-6", 
                    "CK_PROFILER": "gprof", 
                    "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
                    "CK_LIB_EXT": ".a", 
                    "CK_OPT_SIZE": "-Os", 
                    "CK_OPT_SPEED": "-O3", 
                    "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
                    "CK_CC": "gcc-6", 
                    "CK_RANLIB": "ranlib", 
                    "CK_COMPILER_FLAG_GPROF": "-pg", 
                    "CK_OPT_ALL_WARNINGS": "-Wall", 
                    "CK_LB_OUTPUT": "-o ", 
                    "CK_COMPILER_FLAG_STD90": "-std=c90", 
                    "CK_FLAG_PREFIX_VAR": "-D", 
                    "CK_FLAGS_STATIC_LIB": "-fPIC", 
                    "CK_EXTRA_LIB_M": "-lm", 
                    "CK_COMPILER_FLAG_STD99": "-std=c99", 
                    "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
                    "CK_FLAG_PREFIX_LIB_DIR": "-L", 
                    "CK_FLAGS_CREATE_OBJ": "-c", 
                    "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
                    "CK_OPT_UNWIND": " ", 
                    "CK_OBJ_EXT": ".o", 
                    "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
                    "CK_FLAGS_OUTPUT": "-o ", 
                    "CK_LB": "ar rcs", 
                    "CK_LD": "ld", 
                    "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
                    "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
                    "CK_PLUGIN_FLAG": "-fplugin=", 
                    "CK_OPT_SPEED_SAFE": "-O2", 
                    "CK_DLL_EXT": ".so", 
                    "CK_CXX": "g++-6", 
                    "CK_ASM_EXT": ".s", 
                    "CK_FLAG_PREFIX_INCLUDE": "-I", 
                    "CK_LD_FLAGS_EXTRA": "", 
                    "CK_OBJDUMP": "objdump -d", 
                    "CK_EXE_EXT": ".out", 
                    "CK_FLAGS_DLL_EXTRA": "", 
                    "CK_FLAGS_DLL": "-shared -fPIC", 
                    "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
                    "CK_ENV_COMPILER_GCC": "/usr", 
                    "CK_EXTRA_LIB_DL": "-ldl", 
                    "CK_GPROF_OUT_FILE": "gmon.out", 
                    "CK_MAKE": "make", 
                    "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
                    "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
                    "CK_FLAGS_CREATE_ASM": "-S"
                  }, 
                  "soft_alias": "compiler.gcc"
                }, 
                "local": "yes"
              }
            }, 
            "tags": [
              "64bits", 
              "host-os-linux-64", 
              "lang-c", 
              "lang-cpp", 
              "lang-f77", 
              "lang-f90", 
              "lang-f95", 
              "lib", 
              "rtl", 
              "target-os-linux-64", 
              "v0", 
              "v0.3", 
              "xopenme"
            ], 
            "customize": {
              "used_package_uid": "0573487b8121d094", 
              "used_package_uoa": "lib-rtl-xopenme", 
              "dynamic_lib": "librtlxopenme.so", 
              "static_lib": "librtlxopenme.a", 
              "skip_path": "yes", 
              "path_include": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/include", 
              "include_name": "xopenme.h", 
              "version": "0.3", 
              "env_prefix": "CK_ENV_LIB_RTL_XOPENME", 
              "extra_dir": "", 
              "version_split": [
                0, 
                3
              ], 
              "full_path": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib/librtlxopenme.a", 
              "path_lib": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib"
            }, 
            "setup": {
              "deps_compiler": "1a4f96b3790174ff", 
              "version": "0.3", 
              "version_split": [
                0, 
                3
              ], 
              "target_os_bits": "64", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "xOpenME run-time library", 
            "package_uoa": "0573487b8121d094", 
            "soft_uoa": "673507878d649b4a", 
            "env": {
              "CK_ENV_LIB_RTL_XOPENME_INCLUDE_NAME": "xopenme.h", 
              "CK_ENV_LIB_RTL_XOPENME_DYNAMIC_NAME": "librtlxopenme.so", 
              "CK_ENV_LIB_RTL_XOPENME": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64", 
              "CK_ENV_LIB_RTL_XOPENME_STATIC_NAME": "librtlxopenme.a"
            }, 
            "soft_alias": "lib.rtl.xopenme"
          }, 
          "package_uoa": "0573487b8121d094", 
          "local": "yes"
        }, 
        "compiler": {
          "detected_ver": "6.3.0", 
          "sort": 10, 
          "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
          "ver": "6.3.0", 
          "name": "C compiler", 
          "tags": "compiler,lang-cpp", 
          "build_dir_name": "gcc", 
          "uoa": "1a4f96b3790174ff", 
          "choices": [
            "1a4f96b3790174ff"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "compiler", 
              "gcc", 
              "host-os-linux-64", 
              "lang-c", 
              "lang-cpp", 
              "target-os-linux-64", 
              "v6", 
              "v6.3", 
              "v6.3.0"
            ], 
            "customize": {
              "tool_postfix": "-6", 
              "can_strip_dynamic_lib": "yes", 
              "build_dir_name": "gcc", 
              "skip_path": "yes", 
              "tool_prefix_configured": "yes", 
              "tool_prefix": "", 
              "tool_postfix_configured": "yes", 
              "env_prefix": "CK_ENV_COMPILER_GCC", 
              "soft_version_cmd": {
                "win": " --version > $#filename#$ 2>&1", 
                "linux": "--version > $#filename#$ 2>&1"
              }, 
              "soft_path_example": {
                "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                "linux": "/usr/bin/gcc"
              }, 
              "languages": [
                "C", 
                "CPP"
              ], 
              "version": "6.3.0", 
              "soft_file_from_host_os": "yes", 
              "sort": 100, 
              "soft_file": {
                "win": "gcc.exe", 
                "linux": "gcc"
              }, 
              "retarget": "no", 
              "search_numeric_ext_on_linux": "yes", 
              "add_to_path": "yes", 
              "add_only_with_version": "yes", 
              "version_split": [
                6, 
                3, 
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 4, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "ck_version": 10, 
              "only_for_target_os_tags": [
                "mingw", 
                "windows", 
                "linux"
              ], 
              "full_path": "/usr/bin/gcc-6"
            }, 
            "setup": {
              "version_split": [
                6, 
                3, 
                0
              ], 
              "target_os_bits": "64", 
              "version": "6.3.0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "GNU C compiler", 
            "soft_uoa": "3a8a82fa40bf992d", 
            "env": {
              "CK_FLAGS_DYNAMIC_BIN": " ", 
              "CK_COMPILER_FLAGS_OBLIGATORY": "", 
              "CK_AR": "ar", 
              "CK_COMPILER_POSTFIX": "-6", 
              "CK_PROFILER": "gprof", 
              "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
              "CK_LIB_EXT": ".a", 
              "CK_OPT_SIZE": "-Os", 
              "CK_OPT_SPEED": "-O3", 
              "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
              "CK_CC": "gcc-6", 
              "CK_RANLIB": "ranlib", 
              "CK_COMPILER_FLAG_GPROF": "-pg", 
              "CK_OPT_ALL_WARNINGS": "-Wall", 
              "CK_LB_OUTPUT": "-o ", 
              "CK_COMPILER_FLAG_STD90": "-std=c90", 
              "CK_FLAG_PREFIX_VAR": "-D", 
              "CK_FLAGS_STATIC_LIB": "-fPIC", 
              "CK_EXTRA_LIB_M": "-lm", 
              "CK_COMPILER_FLAG_STD99": "-std=c99", 
              "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
              "CK_FLAG_PREFIX_LIB_DIR": "-L", 
              "CK_FLAGS_CREATE_OBJ": "-c", 
              "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
              "CK_OPT_UNWIND": " ", 
              "CK_OBJ_EXT": ".o", 
              "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
              "CK_FLAGS_OUTPUT": "-o ", 
              "CK_LB": "ar rcs", 
              "CK_LD": "ld", 
              "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
              "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
              "CK_PLUGIN_FLAG": "-fplugin=", 
              "CK_OPT_SPEED_SAFE": "-O2", 
              "CK_DLL_EXT": ".so", 
              "CK_CXX": "g++-6", 
              "CK_ASM_EXT": ".s", 
              "CK_FLAG_PREFIX_INCLUDE": "-I", 
              "CK_LD_FLAGS_EXTRA": "", 
              "CK_OBJDUMP": "objdump -d", 
              "CK_EXE_EXT": ".out", 
              "CK_FLAGS_DLL_EXTRA": "", 
              "CK_FLAGS_DLL": "-shared -fPIC", 
              "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
              "CK_ENV_COMPILER_GCC": "/usr", 
              "CK_EXTRA_LIB_DL": "-ldl", 
              "CK_GPROF_OUT_FILE": "gmon.out", 
              "CK_MAKE": "make", 
              "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
              "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
              "CK_FLAGS_CREATE_ASM": "-S"
            }, 
            "soft_alias": "compiler.gcc"
          }, 
          "local": "yes"
        }
      }, 
      "tags": [
        "64bits", 
        "channel-stable", 
        "host-os-linux-64", 
        "lang-cpp", 
        "lib", 
        "nntest", 
        "target-os-linux-64", 
        "v0", 
        "v0.1"
      ], 
      "customize": {
        "add_include_path": "yes", 
        "used_package_uid": "a6f6a5e9a44c7999", 
        "skip_add_to_bin": "yes", 
        "path_include": "/home/nikolay/CK-TOOLS/lib-nntest-0.1-gcc-6.3.0-linux-64/install/include", 
        "skip_add_to_path": "yes", 
        "skip_path": "yes", 
        "used_package_uoa": "lib-nntest", 
        "soft_file": {
          "win": "include\\ck_nntest_common.h", 
          "linux": "include/ck_nntest_common.h"
        }, 
        "version": "0.1", 
        "env_prefix": "CK_ENV_LIB_NNTEST", 
        "extra_dir": "", 
        "version_split": [
          0, 
          1
        ], 
        "limit_recursion_dir_search": {
          "win": 4, 
          "linux": 4
        }, 
        "full_path": "/home/nikolay/CK-TOOLS/lib-nntest-0.1-gcc-6.3.0-linux-64/install/include/ck_nntest_common.h"
      }, 
      "setup": {
        "deps_xopenme": "799de4c0e89eb088", 
        "deps_compiler": "1a4f96b3790174ff", 
        "version": "0.1", 
        "version_split": [
          0, 
          1
        ], 
        "target_os_bits": "64", 
        "host_os_uoa": "4258b5fe54828a50", 
        "target_os_uoa": "4258b5fe54828a50"
      }, 
      "env_script": "env.sh", 
      "package_uoa": "a6f6a5e9a44c7999", 
      "soft_uoa": "3f3beda1a806ad96", 
      "env": {
        "CK_ENV_LIB_NNTEST": "/home/nikolay/CK-TOOLS/lib-nntest-0.1-gcc-6.3.0-linux-64/install"
      }, 
      "soft_alias": "lib.nntest"
    }, 
    "ver": "0.1", 
    "package_uoa": "a6f6a5e9a44c7999", 
    "local": "yes"
  }, 
  "xopenme": {
    "sort": 100, 
    "bat": ". /home/nikolay/CK/local/env/799de4c0e89eb088/env.sh\n", 
    "cus": {
      "used_package_uid": "0573487b8121d094", 
      "used_package_uoa": "lib-rtl-xopenme", 
      "dynamic_lib": "librtlxopenme.so", 
      "static_lib": "librtlxopenme.a", 
      "skip_path": "yes", 
      "path_include": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/include", 
      "include_name": "xopenme.h", 
      "version": "0.3", 
      "env_prefix": "CK_ENV_LIB_RTL_XOPENME", 
      "extra_dir": "", 
      "version_split": [
        0, 
        3
      ], 
      "full_path": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib/librtlxopenme.a", 
      "path_lib": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib"
    }, 
    "name": "xOpenME library", 
    "tags": "lib,xopenme", 
    "num_entries": 1, 
    "choices": [
      "799de4c0e89eb088"
    ], 
    "uoa": "799de4c0e89eb088", 
    "dict": {
      "data_name": "xOpenME run-time library", 
      "deps": {
        "compiler": {
          "detected_ver": "6.3.0", 
          "sort": 10, 
          "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
          "ver": "6.3.0", 
          "name": "C compiler", 
          "tags": "compiler,lang-c", 
          "build_dir_name": "gcc", 
          "uoa": "1a4f96b3790174ff", 
          "choices": [
            "92584cbdaf8ec6d0"
          ], 
          "num_entries": 2, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "compiler", 
              "gcc", 
              "host-os-linux-64", 
              "lang-c", 
              "lang-cpp", 
              "target-os-linux-64", 
              "v6", 
              "v6.3", 
              "v6.3.0"
            ], 
            "customize": {
              "tool_postfix": "-6", 
              "can_strip_dynamic_lib": "yes", 
              "build_dir_name": "gcc", 
              "skip_path": "yes", 
              "tool_prefix_configured": "yes", 
              "tool_prefix": "", 
              "tool_postfix_configured": "yes", 
              "env_prefix": "CK_ENV_COMPILER_GCC", 
              "soft_version_cmd": {
                "win": " --version > $#filename#$ 2>&1", 
                "linux": "--version > $#filename#$ 2>&1"
              }, 
              "soft_path_example": {
                "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                "linux": "/usr/bin/gcc"
              }, 
              "languages": [
                "C", 
                "CPP"
              ], 
              "version": "6.3.0", 
              "soft_file_from_host_os": "yes", 
              "sort": 100, 
              "soft_file": {
                "win": "gcc.exe", 
                "linux": "gcc"
              }, 
              "retarget": "no", 
              "search_numeric_ext_on_linux": "yes", 
              "add_to_path": "yes", 
              "add_only_with_version": "yes", 
              "version_split": [
                6, 
                3, 
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 4, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "ck_version": 10, 
              "only_for_target_os_tags": [
                "mingw", 
                "windows", 
                "linux"
              ], 
              "full_path": "/usr/bin/gcc-6"
            }, 
            "setup": {
              "version_split": [
                6, 
                3, 
                0
              ], 
              "target_os_bits": "64", 
              "version": "6.3.0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "GNU C compiler", 
            "soft_uoa": "3a8a82fa40bf992d", 
            "env": {
              "CK_FLAGS_DYNAMIC_BIN": " ", 
              "CK_COMPILER_FLAGS_OBLIGATORY": "", 
              "CK_AR": "ar", 
              "CK_COMPILER_POSTFIX": "-6", 
              "CK_PROFILER": "gprof", 
              "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
              "CK_LIB_EXT": ".a", 
              "CK_OPT_SIZE": "-Os", 
              "CK_OPT_SPEED": "-O3", 
              "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
              "CK_CC": "gcc-6", 
              "CK_RANLIB": "ranlib", 
              "CK_COMPILER_FLAG_GPROF": "-pg", 
              "CK_OPT_ALL_WARNINGS": "-Wall", 
              "CK_LB_OUTPUT": "-o ", 
              "CK_COMPILER_FLAG_STD90": "-std=c90", 
              "CK_FLAG_PREFIX_VAR": "-D", 
              "CK_FLAGS_STATIC_LIB": "-fPIC", 
              "CK_EXTRA_LIB_M": "-lm", 
              "CK_COMPILER_FLAG_STD99": "-std=c99", 
              "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
              "CK_FLAG_PREFIX_LIB_DIR": "-L", 
              "CK_FLAGS_CREATE_OBJ": "-c", 
              "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
              "CK_OPT_UNWIND": " ", 
              "CK_OBJ_EXT": ".o", 
              "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
              "CK_FLAGS_OUTPUT": "-o ", 
              "CK_LB": "ar rcs", 
              "CK_LD": "ld", 
              "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
              "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
              "CK_PLUGIN_FLAG": "-fplugin=", 
              "CK_OPT_SPEED_SAFE": "-O2", 
              "CK_DLL_EXT": ".so", 
              "CK_CXX": "g++-6", 
              "CK_ASM_EXT": ".s", 
              "CK_FLAG_PREFIX_INCLUDE": "-I", 
              "CK_LD_FLAGS_EXTRA": "", 
              "CK_OBJDUMP": "objdump -d", 
              "CK_EXE_EXT": ".out", 
              "CK_FLAGS_DLL_EXTRA": "", 
              "CK_FLAGS_DLL": "-shared -fPIC", 
              "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
              "CK_ENV_COMPILER_GCC": "/usr", 
              "CK_EXTRA_LIB_DL": "-ldl", 
              "CK_GPROF_OUT_FILE": "gmon.out", 
              "CK_MAKE": "make", 
              "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
              "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
              "CK_FLAGS_CREATE_ASM": "-S"
            }, 
            "soft_alias": "compiler.gcc"
          }, 
          "local": "yes"
        }
      }, 
      "tags": [
        "64bits", 
        "host-os-linux-64", 
        "lang-c", 
        "lang-cpp", 
        "lang-f77", 
        "lang-f90", 
        "lang-f95", 
        "lib", 
        "rtl", 
        "target-os-linux-64", 
        "v0", 
        "v0.3", 
        "xopenme"
      ], 
      "customize": {
        "used_package_uid": "0573487b8121d094", 
        "used_package_uoa": "lib-rtl-xopenme", 
        "dynamic_lib": "librtlxopenme.so", 
        "static_lib": "librtlxopenme.a", 
        "skip_path": "yes", 
        "path_include": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/include", 
        "include_name": "xopenme.h", 
        "version": "0.3", 
        "env_prefix": "CK_ENV_LIB_RTL_XOPENME", 
        "extra_dir": "", 
        "version_split": [
          0, 
          3
        ], 
        "full_path": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib/librtlxopenme.a", 
        "path_lib": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64/lib"
      }, 
      "setup": {
        "deps_compiler": "1a4f96b3790174ff", 
        "version": "0.3", 
        "version_split": [
          0, 
          3
        ], 
        "target_os_bits": "64", 
        "host_os_uoa": "4258b5fe54828a50", 
        "target_os_uoa": "4258b5fe54828a50"
      }, 
      "env_script": "env.sh", 
      "package_uoa": "0573487b8121d094", 
      "soft_uoa": "673507878d649b4a", 
      "env": {
        "CK_ENV_LIB_RTL_XOPENME_INCLUDE_NAME": "xopenme.h", 
        "CK_ENV_LIB_RTL_XOPENME_DYNAMIC_NAME": "librtlxopenme.so", 
        "CK_ENV_LIB_RTL_XOPENME": "/home/nikolay/CK-TOOLS/lib-rtl-xopenme-0.3-gcc-5.4.0-linux-64", 
        "CK_ENV_LIB_RTL_XOPENME_STATIC_NAME": "librtlxopenme.a"
      }, 
      "soft_alias": "lib.rtl.xopenme"
    }, 
    "ver": "0.3", 
    "package_uoa": "0573487b8121d094", 
    "local": "yes"
  }, 
  "library": {
    "sort": 1, 
    "bat": ". /home/nikolay/CK/local/env/42af974480b989d7/env.sh\n", 
    "cus": {
      "git_src_dir": "tensorflow_cc", 
      "used_package_uid": "b1eb7fe602c2554e", 
      "used_package_uoa": "lib-tensorflow_cc-shared-1.6.0", 
      "install_env": {
        "PACKAGE_PATCH": "YES", 
        "PACKAGE_SKIP_CLEAN_INSTALL": "NO", 
        "PACKAGE_CONFIGURE_FLAGS_LINUX": "", 
        "CK_CPU_ARM_NEON": "OFF", 
        "PACKAGE_SKIP_CLEAN_PACKAGE": "NO", 
        "PACKAGE_SUB_DIR": "tensorflow_cc", 
        "CK_CC_FLAGS_FOR_CMAKE": "${CK_COMPILER_FLAGS_OBLIGATORY}", 
        "PACKAGE_BUILD_TYPE": "cmake", 
        "PACKAGE_SKIP_CLEAN_OBJ": "YES", 
        "CK_CXX_FLAGS_FOR_CMAKE": "${CK_COMPILER_FLAGS_OBLIGATORY}", 
        "CK_CPU_ARM_VFPV3": "OFF", 
        "CK_CXX_PATH_FOR_CMAKE": "/usr/bin/g++-6", 
        "CK_TARGET_CPU_BITS": "64", 
        "CK_CC_PATH_FOR_CMAKE": "/usr/bin/gcc-6", 
        "CK_COMPILER_PATH_FOR_CMAKE_MINGW": "/usr/bin", 
        "PACKAGE_SUB_DIR1": "tensorflow_cc/tensorflow_cc", 
        "CK_ARMEABI_V7A": "OFF", 
        "PACKAGE_SKIP_CMAKE_TARGET": "NO", 
        "CK_HOST_CPU_NUMBER_OF_PROCESSORS": "4", 
        "CK_HOST_OS_ID": "linux", 
        "CMAKE_CONFIG": "Release", 
        "CK_AR_PATH_FOR_CMAKE_MINGW": "/usr/bin/ar", 
        "CK_TARGET_OS_ID": "linux", 
        "CK_CXX_FLAGS_FOR_CMAKE_MINGW": "${CK_COMPILER_FLAGS_OBLIGATORY}", 
        "PACKAGE_VERSION": "1.6", 
        "CK_CC_PATH_FOR_CMAKE_MINGW": "/usr/bin/gcc-6", 
        "CK_AR_PATH_FOR_CMAKE": "/usr/bin/ar", 
        "CK_CXX_PATH_FOR_CMAKE_MINGW": "/usr/bin/g++-6", 
        "CK_CMAKE_EXTRA": "", 
        "PACKAGE_URL": "https://github.com/ctuning/tensorflow_cc.git", 
        "PACKAGE_CONFIGURE_FLAGS_ANDROID": "-DBUILD_SHARED_LIBS=OFF", 
        "CK_CC_FLAGS_FOR_CMAKE_MINGW": "${CK_COMPILER_FLAGS_OBLIGATORY}", 
        "PACKAGE_CONFIGURE_FLAGS_WINDOWS": "", 
        "CK_ARMEABI_V7A_HARD": "OFF", 
        "PACKAGE_AUTOGEN": "NO", 
        "CK_COMPILER_PATH_FOR_CMAKE": "/usr/bin", 
        "PACKAGE_GIT": "YES", 
        "PACKAGE_GIT_CHECKOUT": "lib-tensorflow_cc-shared-1.6.0", 
        "PACKAGE_SKIP_CLEAN_SRC_DIR": "YES", 
        "PACKAGE_CONFIGURE_FLAGS": ""
      }, 
      "dynamic_lib": "libtensorflow_cc.so", 
      "skip_path": "yes", 
      "path_include": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/include/tensorflow", 
      "version": "1.6", 
      "env_prefix": "CK_ENV_LIB_TENSORFLOW_CC", 
      "extra_dir": "", 
      "version_split": [
        1, 
        6
      ], 
      "limit_recursion_dir_search": {
        "win": 4, 
        "linux": 5
      }, 
      "check_that_exists": "yes", 
      "soft_file": {
        "android": "tensorflow/contrib/makefile/gen/lib/libtensorflow-core.a", 
        "linux": "install/lib/tensorflow_cc/libtensorflow_cc.so"
      }, 
      "ck_version": 10, 
      "full_path": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/lib/tensorflow_cc/libtensorflow_cc.so", 
      "path_lib": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/lib/tensorflow_cc"
    }, 
    "name": "TensorFlow C++ API", 
    "tags": "lib,tensorflow_cc", 
    "num_entries": 4, 
    "choices": [
      "42af974480b989d7", 
      "e64ec4bca017b634", 
      "613413998bfe81f9", 
      "f445ea6113fd89de"
    ], 
    "uoa": "42af974480b989d7", 
    "dict": {
      "data_name": "TensorFlow C++ API", 
      "deps": {
        "bazel": {
          "detected_ver": "0.6.1", 
          "sort": 40, 
          "bat": ". /home/nikolay/CK/local/env/5e7beacbfc2c1c47/env.sh\n", 
          "ver": "0.6.1", 
          "name": "Bazel tool", 
          "tags": "tool,bazel", 
          "build_dir_name": "bazel", 
          "uoa": "5e7beacbfc2c1c47", 
          "choices": [
            "5e7beacbfc2c1c47", 
            "51d1316b040406f9"
          ], 
          "num_entries": 1, 
          "add_to_path": "no", 
          "version_from": [
            0, 
            5
          ], 
          "version_to": [
            0, 
            9, 
            0
          ], 
          "dict": {
            "env_script": "env.sh", 
            "deps": {
              "env-msys2": {
                "sort": 20, 
                "local": "yes", 
                "name": "MSYS2 env", 
                "only_for_target_os_tags": [
                  "windows"
                ], 
                "tags": "env,msys2"
              }, 
              "java-compiler": {
                "detected_ver": "1.8.0_121", 
                "sort": 10, 
                "bat": ". /home/nikolay/CK/local/env/b118e295666b8e34/env.sh\n", 
                "ver": "1.8.0_121", 
                "name": "Java compiler", 
                "tags": "compiler,lang-java", 
                "build_dir_name": "java", 
                "uoa": "b118e295666b8e34", 
                "choices": [
                  "b118e295666b8e34", 
                  "802aa7e1cb04a1ca"
                ], 
                "num_entries": 1, 
                "dict": {
                  "env_script": "env.sh", 
                  "deps": {}, 
                  "tags": [
                    "64bits", 
                    "compiler", 
                    "host-os-linux-64", 
                    "java", 
                    "lang-java", 
                    "target-os-linux-64", 
                    "v1", 
                    "v1.8", 
                    "v1.8.0", 
                    "v1.8.0.121"
                  ], 
                  "customize": {
                    "soft_version_cmd": {
                      "win": "-version > $#filename#$ 2>&1", 
                      "linux": "-version > $#filename#$ 2>&1"
                    }, 
                    "build_dir_name": "java", 
                    "skip_path": "yes", 
                    "only_for_target_os_tags": [
                      "windows", 
                      "linux"
                    ], 
                    "soft_file_from_host_os": "yes", 
                    "languages": [
                      "JAVA"
                    ], 
                    "soft_file": {
                      "win": "javac.exe", 
                      "linux": "javac"
                    }, 
                    "version": "1.8.0_121", 
                    "add_to_path": "yes", 
                    "add_only_with_version": "yes", 
                    "limit_recursion_dir_search": {
                      "win": 4, 
                      "linux": 3
                    }, 
                    "version_split": [
                      1, 
                      8, 
                      0, 
                      121
                    ], 
                    "full_path": "/home/nikolay/Programs/jdk1.8.0_121/bin/javac", 
                    "check_that_exists": "yes", 
                    "soft_path_example": {
                      "win": "C:\\Program Files\\Java\\jdk1.8.0_77\\bin\\javac.exe", 
                      "linux": "/usr/bin/javac"
                    }, 
                    "ck_version": 10, 
                    "env_prefix": "CK_ENV_COMPILER_JAVA"
                  }, 
                  "setup": {
                    "version_split": [
                      1, 
                      8, 
                      0, 
                      121
                    ], 
                    "target_os_bits": "64", 
                    "version": "1.8.0_121", 
                    "host_os_uoa": "4258b5fe54828a50", 
                    "target_os_uoa": "4258b5fe54828a50"
                  }, 
                  "data_name": "java compiler", 
                  "soft_uoa": "0129a3b82235cbc0", 
                  "env": {
                    "CK_FLAG_PREFIX_INCLUDE": "-classpath ", 
                    "CK_COMPILER_FLAGS_OBLIGATORY": "", 
                    "CK_OBJ_EXT": ".class", 
                    "CK_ENV_COMPILER_JAVA": "/home/nikolay/Programs/jdk1.8.0_121", 
                    "CK_ENV_COMPILER_JAVA_BIN": "/home/nikolay/Programs/jdk1.8.0_121/bin", 
                    "CK_JAVAC": "javac", 
                    "JAVA_HOME": "/home/nikolay/Programs/jdk1.8.0_121", 
                    "CK_JAVA_RT": "java -classpath ."
                  }, 
                  "soft_alias": "compiler.java"
                }, 
                "local": "yes"
              }
            }, 
            "tags": [
              "64bits", 
              "bazel", 
              "channel-stable", 
              "host-os-linux-64", 
              "target-os-linux-64", 
              "tool", 
              "v0", 
              "v0.6", 
              "v0.6.1"
            ], 
            "customize": {
              "git_src_dir": "src", 
              "only_for_host_os_tags": [
                "windows", 
                "linux"
              ], 
              "use_git_revision": "no", 
              "soft_version_cmd": {
                "win": "version > $#filename#$ 2>&1", 
                "linux": "version > $#filename#$ 2>&1"
              }, 
              "used_package_uoa": "tool-bazel-0.6.1-linux", 
              "install_env": {
                "BAZEL_PATCH1": "aarch64.patch", 
                "BAZEL_PATCH3": "javac-max-heap-500mb.patch", 
                "BAZEL_PATCH2": "aarch64-is-64bit.patch", 
                "CK_HOST_CPU_NUMBER_OF_PROCESSORS": "4", 
                "BAZEL_PATCH4": "non-64bit-unix-warning.patch", 
                "BAZEL_ZIP": "bazel-0.6.1-dist.zip", 
                "CK_TARGET_CPU_BITS": "64", 
                "CK_TARGET_OS_ID": "linux", 
                "BAZEL_URL": "https://github.com/bazelbuild/bazel/releases/download/0.6.1/bazel-0.6.1-dist.zip", 
                "PACKAGE_VERSION": "0.6.1", 
                "CK_HOST_OS_ID": "linux"
              }, 
              "build_dir_name": "bazel", 
              "skip_path": "yes", 
              "soft_file_from_host_os": "yes", 
              "soft_file": {
                "win": "bazel.exe", 
                "linux": "bazel"
              }, 
              "version": "0.6.1", 
              "add_to_path": "yes", 
              "full_path": "/home/nikolay/CK-TOOLS/tool-bazel-0.6.1-linux-64/install/bin/bazel", 
              "extra_dir": "", 
              "version_split": [
                0, 
                6, 
                1
              ], 
              "limit_recursion_dir_search": {
                "win": 4, 
                "linux": 4
              }, 
              "check_that_exists": "yes", 
              "soft_path_example": {
                "linux": "/usr/bin/bazel"
              }, 
              "ck_version": 10, 
              "env_prefix": "CK_ENV_TOOL_BAZEL", 
              "used_package_uid": "4d6541819898c796"
            }, 
            "setup": {
              "deps_java-compiler": "b118e295666b8e34", 
              "version": "0.6.1", 
              "version_split": [
                0, 
                6, 
                1
              ], 
              "target_os_bits": "64", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "bazel", 
            "package_uoa": "4d6541819898c796", 
            "soft_uoa": "359f7730bd23ec60", 
            "env": {
              "CK_ENV_TOOL_BAZEL": "/home/nikolay/CK-TOOLS/tool-bazel-0.6.1-linux-64/install", 
              "CK_ENV_TOOL_BAZEL_BIN": "/home/nikolay/CK-TOOLS/tool-bazel-0.6.1-linux-64/install/bin"
            }, 
            "soft_alias": "tool.bazel"
          }, 
          "package_uoa": "4d6541819898c796", 
          "local": "no"
        }, 
        "cmake": {
          "detected_ver": "3.5.1", 
          "sort": 5, 
          "bat": ". /home/nikolay/CK/local/env/2564764d7438cbf6/env.sh\n", 
          "ver": "3.5.1", 
          "name": "CMake", 
          "tags": "tool,cmake", 
          "build_dir_name": "cmake", 
          "uoa": "2564764d7438cbf6", 
          "choices": [
            "2564764d7438cbf6"
          ], 
          "num_entries": 1, 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "cmake", 
              "host-os-linux-64", 
              "target-os-linux-64", 
              "tool", 
              "v3", 
              "v3.5", 
              "v3.5.1"
            ], 
            "customize": {
              "soft_version_cmd": {
                "win": "--version > $#filename#$ 2>&1", 
                "linux": "--version > $#filename#$ 2>&1"
              }, 
              "only_for_host_os_tags": [
                "windows", 
                "linux"
              ], 
              "build_dir_name": "cmake", 
              "skip_path": "yes", 
              "soft_file_from_host_os": "yes", 
              "soft_file": {
                "win": "cmake.exe", 
                "linux": "cmake"
              }, 
              "version": "3.5.1", 
              "add_to_path": "yes", 
              "add_only_with_version": "yes", 
              "limit_recursion_dir_search": {
                "win": 3, 
                "linux": 3
              }, 
              "version_split": [
                3, 
                5, 
                1
              ], 
              "full_path": "/usr/bin/cmake", 
              "check_that_exists": "yes", 
              "soft_path_example": {
                "win": "C:\\Program Files (x86)\\CMake\\bin\\cmake.exe", 
                "linux": "/usr/bin/cmake"
              }, 
              "ck_version": 10, 
              "env_prefix": "CK_ENV_TOOL_CMAKE"
            }, 
            "setup": {
              "version_split": [
                3, 
                5, 
                1
              ], 
              "target_os_bits": "64", 
              "version": "3.5.1", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "cmake", 
            "soft_uoa": "77ef5e31404d9589", 
            "env": {
              "CK_ENV_TOOL_CMAKE_BIN": "/usr/bin", 
              "CK_ENV_TOOL_CMAKE": "/usr", 
              "CK_CMAKE": "cmake"
            }, 
            "soft_alias": "tool.cmake"
          }, 
          "local": "yes", 
          "force_target_as_host": "yes"
        }, 
        "compiler": {
          "detected_ver": "6.3.0", 
          "sort": 10, 
          "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
          "ver": "6.3.0", 
          "name": "C++ compiler", 
          "tags": "compiler,lang-cpp", 
          "build_dir_name": "gcc", 
          "uoa": "1a4f96b3790174ff", 
          "choices": [
            "1a4f96b3790174ff"
          ], 
          "num_entries": 1, 
          "add_to_path": "no", 
          "dict": {
            "env_script": "env.sh", 
            "deps": {}, 
            "tags": [
              "64bits", 
              "compiler", 
              "gcc", 
              "host-os-linux-64", 
              "lang-c", 
              "lang-cpp", 
              "target-os-linux-64", 
              "v6", 
              "v6.3", 
              "v6.3.0"
            ], 
            "customize": {
              "tool_postfix": "-6", 
              "can_strip_dynamic_lib": "yes", 
              "build_dir_name": "gcc", 
              "skip_path": "yes", 
              "tool_prefix_configured": "yes", 
              "tool_prefix": "", 
              "tool_postfix_configured": "yes", 
              "env_prefix": "CK_ENV_COMPILER_GCC", 
              "soft_version_cmd": {
                "win": " --version > $#filename#$ 2>&1", 
                "linux": "--version > $#filename#$ 2>&1"
              }, 
              "soft_path_example": {
                "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
                "linux": "/usr/bin/gcc"
              }, 
              "languages": [
                "C", 
                "CPP"
              ], 
              "version": "6.3.0", 
              "soft_file_from_host_os": "yes", 
              "sort": 100, 
              "soft_file": {
                "win": "gcc.exe", 
                "linux": "gcc"
              }, 
              "retarget": "no", 
              "search_numeric_ext_on_linux": "yes", 
              "add_to_path": "yes", 
              "add_only_with_version": "yes", 
              "version_split": [
                6, 
                3, 
                0
              ], 
              "limit_recursion_dir_search": {
                "win": 4, 
                "linux": 3
              }, 
              "check_that_exists": "yes", 
              "ck_version": 10, 
              "only_for_target_os_tags": [
                "mingw", 
                "windows", 
                "linux"
              ], 
              "full_path": "/usr/bin/gcc-6"
            }, 
            "setup": {
              "version_split": [
                6, 
                3, 
                0
              ], 
              "target_os_bits": "64", 
              "version": "6.3.0", 
              "host_os_uoa": "4258b5fe54828a50", 
              "target_os_uoa": "4258b5fe54828a50"
            }, 
            "data_name": "GNU C compiler", 
            "soft_uoa": "3a8a82fa40bf992d", 
            "env": {
              "CK_FLAGS_DYNAMIC_BIN": " ", 
              "CK_COMPILER_FLAGS_OBLIGATORY": "", 
              "CK_AR": "ar", 
              "CK_COMPILER_POSTFIX": "-6", 
              "CK_PROFILER": "gprof", 
              "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
              "CK_LIB_EXT": ".a", 
              "CK_OPT_SIZE": "-Os", 
              "CK_OPT_SPEED": "-O3", 
              "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
              "CK_CC": "gcc-6", 
              "CK_RANLIB": "ranlib", 
              "CK_COMPILER_FLAG_GPROF": "-pg", 
              "CK_OPT_ALL_WARNINGS": "-Wall", 
              "CK_LB_OUTPUT": "-o ", 
              "CK_COMPILER_FLAG_STD90": "-std=c90", 
              "CK_FLAG_PREFIX_VAR": "-D", 
              "CK_FLAGS_STATIC_LIB": "-fPIC", 
              "CK_EXTRA_LIB_M": "-lm", 
              "CK_COMPILER_FLAG_STD99": "-std=c99", 
              "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
              "CK_FLAG_PREFIX_LIB_DIR": "-L", 
              "CK_FLAGS_CREATE_OBJ": "-c", 
              "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
              "CK_OPT_UNWIND": " ", 
              "CK_OBJ_EXT": ".o", 
              "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
              "CK_FLAGS_OUTPUT": "-o ", 
              "CK_LB": "ar rcs", 
              "CK_LD": "ld", 
              "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
              "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
              "CK_PLUGIN_FLAG": "-fplugin=", 
              "CK_OPT_SPEED_SAFE": "-O2", 
              "CK_DLL_EXT": ".so", 
              "CK_CXX": "g++-6", 
              "CK_ASM_EXT": ".s", 
              "CK_FLAG_PREFIX_INCLUDE": "-I", 
              "CK_LD_FLAGS_EXTRA": "", 
              "CK_OBJDUMP": "objdump -d", 
              "CK_EXE_EXT": ".out", 
              "CK_FLAGS_DLL_EXTRA": "", 
              "CK_FLAGS_DLL": "-shared -fPIC", 
              "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
              "CK_ENV_COMPILER_GCC": "/usr", 
              "CK_EXTRA_LIB_DL": "-ldl", 
              "CK_GPROF_OUT_FILE": "gmon.out", 
              "CK_MAKE": "make", 
              "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
              "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
              "CK_FLAGS_CREATE_ASM": "-S"
            }, 
            "soft_alias": "compiler.gcc"
          }, 
          "local": "yes"
        }
      }, 
      "tags": [
        "64bits", 
        "api", 
        "bazel", 
        "channel-stable", 
        "compiled-by-gcc-6.3.0", 
        "host-os-linux-64", 
        "lib", 
        "target-os-linux-64", 
        "tensorflow", 
        "tensorflow_cc", 
        "v1", 
        "v1.6", 
        "v1.6.0", 
        "vmaster", 
        "vshared", 
        "vsrc"
      ], 
      "customize": {
        "git_src_dir": "tensorflow_cc", 
        "used_package_uid": "b1eb7fe602c2554e", 
        "used_package_uoa": "lib-tensorflow_cc-shared-1.6.0", 
        "install_env": {
          "PACKAGE_PATCH": "YES", 
          "PACKAGE_SKIP_CLEAN_INSTALL": "NO", 
          "PACKAGE_CONFIGURE_FLAGS_LINUX": "", 
          "CK_CPU_ARM_NEON": "OFF", 
          "PACKAGE_SKIP_CLEAN_PACKAGE": "NO", 
          "PACKAGE_SUB_DIR": "tensorflow_cc", 
          "CK_CC_FLAGS_FOR_CMAKE": "${CK_COMPILER_FLAGS_OBLIGATORY}", 
          "PACKAGE_BUILD_TYPE": "cmake", 
          "PACKAGE_SKIP_CLEAN_OBJ": "YES", 
          "CK_CXX_FLAGS_FOR_CMAKE": "${CK_COMPILER_FLAGS_OBLIGATORY}", 
          "CK_CPU_ARM_VFPV3": "OFF", 
          "CK_CXX_PATH_FOR_CMAKE": "/usr/bin/g++-6", 
          "CK_TARGET_CPU_BITS": "64", 
          "CK_CC_PATH_FOR_CMAKE": "/usr/bin/gcc-6", 
          "CK_COMPILER_PATH_FOR_CMAKE_MINGW": "/usr/bin", 
          "PACKAGE_SUB_DIR1": "tensorflow_cc/tensorflow_cc", 
          "CK_ARMEABI_V7A": "OFF", 
          "PACKAGE_SKIP_CMAKE_TARGET": "NO", 
          "CK_HOST_CPU_NUMBER_OF_PROCESSORS": "4", 
          "CK_HOST_OS_ID": "linux", 
          "CMAKE_CONFIG": "Release", 
          "CK_AR_PATH_FOR_CMAKE_MINGW": "/usr/bin/ar", 
          "CK_TARGET_OS_ID": "linux", 
          "CK_CXX_FLAGS_FOR_CMAKE_MINGW": "${CK_COMPILER_FLAGS_OBLIGATORY}", 
          "PACKAGE_VERSION": "1.6", 
          "CK_CC_PATH_FOR_CMAKE_MINGW": "/usr/bin/gcc-6", 
          "CK_AR_PATH_FOR_CMAKE": "/usr/bin/ar", 
          "CK_CXX_PATH_FOR_CMAKE_MINGW": "/usr/bin/g++-6", 
          "CK_CMAKE_EXTRA": "", 
          "PACKAGE_URL": "https://github.com/ctuning/tensorflow_cc.git", 
          "PACKAGE_CONFIGURE_FLAGS_ANDROID": "-DBUILD_SHARED_LIBS=OFF", 
          "CK_CC_FLAGS_FOR_CMAKE_MINGW": "${CK_COMPILER_FLAGS_OBLIGATORY}", 
          "PACKAGE_CONFIGURE_FLAGS_WINDOWS": "", 
          "CK_ARMEABI_V7A_HARD": "OFF", 
          "PACKAGE_AUTOGEN": "NO", 
          "CK_COMPILER_PATH_FOR_CMAKE": "/usr/bin", 
          "PACKAGE_GIT": "YES", 
          "PACKAGE_GIT_CHECKOUT": "lib-tensorflow_cc-shared-1.6.0", 
          "PACKAGE_SKIP_CLEAN_SRC_DIR": "YES", 
          "PACKAGE_CONFIGURE_FLAGS": ""
        }, 
        "dynamic_lib": "libtensorflow_cc.so", 
        "skip_path": "yes", 
        "path_include": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/include/tensorflow", 
        "version": "1.6", 
        "env_prefix": "CK_ENV_LIB_TENSORFLOW_CC", 
        "extra_dir": "", 
        "version_split": [
          1, 
          6
        ], 
        "limit_recursion_dir_search": {
          "win": 4, 
          "linux": 5
        }, 
        "check_that_exists": "yes", 
        "soft_file": {
          "android": "tensorflow/contrib/makefile/gen/lib/libtensorflow-core.a", 
          "linux": "install/lib/tensorflow_cc/libtensorflow_cc.so"
        }, 
        "ck_version": 10, 
        "full_path": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/lib/tensorflow_cc/libtensorflow_cc.so", 
        "path_lib": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/lib/tensorflow_cc"
      }, 
      "setup": {
        "deps_compiler": "1a4f96b3790174ff", 
        "deps_cmake": "2564764d7438cbf6", 
        "target_os_uoa": "4258b5fe54828a50", 
        "version": "1.6", 
        "version_split": [
          1, 
          6
        ], 
        "target_os_bits": "64", 
        "host_os_uoa": "4258b5fe54828a50", 
        "deps_bazel": "5e7beacbfc2c1c47"
      }, 
      "env_script": "env.sh", 
      "package_uoa": "b1eb7fe602c2554e", 
      "soft_uoa": "0cdc7594d430ab2b", 
      "env": {
        "CK_ENV_LIB_TENSORFLOW_CC_INCLUDE6": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/include/tensorflow/tensorflow/contrib/makefile/downloads/nsync/public", 
        "CK_ENV_LIB_TENSORFLOW_CC_INCLUDE5": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/include/tensorflow/tensorflow/contrib/makefile/gen/protobuf-host/include", 
        "CK_ENV_LIB_TENSORFLOW_CC_INCLUDE4": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/include/tensorflow/tensorflow/contrib/makefile/downloads/gemmlowp", 
        "CK_ENV_LIB_TENSORFLOW_CC_INCLUDE3": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/include/tensorflow/tensorflow/contrib/makefile/downloads/eigen", 
        "CK_ENV_LIB_TENSORFLOW_CC_INCLUDE2": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/include/tensorflow/tensorflow/contrib/makefile/downloads", 
        "CK_ENV_LIB_TENSORFLOW_CC_INCLUDE1": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/include/tensorflow/bazel-genfiles", 
        "CK_ENV_LIB_TENSORFLOW_CC_INCLUDE0": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/include/tensorflow", 
        "CK_ENV_LIB_TENSORFLOW_CC_CMAKE": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/cmake", 
        "CK_ENV_LIB_TENSORFLOW_CC_LIBPROTOBUF": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/lib/tensorflow_cc/libprotobuf.a", 
        "CK_ENV_LIB_TENSORFLOW_CC": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64", 
        "CK_ENV_LIB_TENSORFLOW_CC_LIBTENSORFLOW_CC": "/home/nikolay/CK-TOOLS/lib-tensorflow_cc-shared-1.6-gcc-6.3.0-linux-64/install/lib/tensorflow_cc/libtensorflow_cc.so"
      }, 
      "soft_alias": "lib.tensorflow_cc"
    }, 
    "ver": "1.6", 
    "package_uoa": "b1eb7fe602c2554e", 
    "local": "yes"
  }, 
  "compiler": {
    "sort": 0, 
    "detected_ver": "6.3.0", 
    "bat": ". /home/nikolay/CK/local/env/1a4f96b3790174ff/env.sh\n", 
    "cus": {
      "tool_postfix": "-6", 
      "can_strip_dynamic_lib": "yes", 
      "build_dir_name": "gcc", 
      "skip_path": "yes", 
      "tool_prefix_configured": "yes", 
      "tool_prefix": "", 
      "tool_postfix_configured": "yes", 
      "env_prefix": "CK_ENV_COMPILER_GCC", 
      "soft_version_cmd": {
        "win": " --version > $#filename#$ 2>&1", 
        "linux": "--version > $#filename#$ 2>&1"
      }, 
      "soft_path_example": {
        "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
        "linux": "/usr/bin/gcc"
      }, 
      "languages": [
        "C", 
        "CPP"
      ], 
      "version": "6.3.0", 
      "soft_file_from_host_os": "yes", 
      "sort": 100, 
      "soft_file": {
        "win": "gcc.exe", 
        "linux": "gcc"
      }, 
      "retarget": "no", 
      "search_numeric_ext_on_linux": "yes", 
      "add_to_path": "yes", 
      "add_only_with_version": "yes", 
      "version_split": [
        6, 
        3, 
        0
      ], 
      "limit_recursion_dir_search": {
        "win": 4, 
        "linux": 3
      }, 
      "check_that_exists": "yes", 
      "ck_version": 10, 
      "only_for_target_os_tags": [
        "mingw", 
        "windows", 
        "linux"
      ], 
      "full_path": "/usr/bin/gcc-6"
    }, 
    "name": "C++ compiler", 
    "tags": "compiler,lang-cpp", 
    "build_dir_name": "gcc", 
    "num_entries": 1, 
    "choices": [
      "1a4f96b3790174ff"
    ], 
    "uoa": "1a4f96b3790174ff", 
    "dict": {
      "data_name": "GNU C compiler", 
      "deps": {}, 
      "tags": [
        "64bits", 
        "compiler", 
        "gcc", 
        "host-os-linux-64", 
        "lang-c", 
        "lang-cpp", 
        "target-os-linux-64", 
        "v6", 
        "v6.3", 
        "v6.3.0"
      ], 
      "customize": {
        "tool_postfix": "-6", 
        "can_strip_dynamic_lib": "yes", 
        "build_dir_name": "gcc", 
        "skip_path": "yes", 
        "tool_prefix_configured": "yes", 
        "tool_prefix": "", 
        "tool_postfix_configured": "yes", 
        "env_prefix": "CK_ENV_COMPILER_GCC", 
        "soft_version_cmd": {
          "win": " --version > $#filename#$ 2>&1", 
          "linux": "--version > $#filename#$ 2>&1"
        }, 
        "soft_path_example": {
          "win": "C:\\Program Files\\GCC-4.9.2-x64\\bin\\gcc.exe", 
          "linux": "/usr/bin/gcc"
        }, 
        "languages": [
          "C", 
          "CPP"
        ], 
        "version": "6.3.0", 
        "soft_file_from_host_os": "yes", 
        "sort": 100, 
        "soft_file": {
          "win": "gcc.exe", 
          "linux": "gcc"
        }, 
        "retarget": "no", 
        "search_numeric_ext_on_linux": "yes", 
        "add_to_path": "yes", 
        "add_only_with_version": "yes", 
        "version_split": [
          6, 
          3, 
          0
        ], 
        "limit_recursion_dir_search": {
          "win": 4, 
          "linux": 3
        }, 
        "check_that_exists": "yes", 
        "ck_version": 10, 
        "only_for_target_os_tags": [
          "mingw", 
          "windows", 
          "linux"
        ], 
        "full_path": "/usr/bin/gcc-6"
      }, 
      "setup": {
        "version_split": [
          6, 
          3, 
          0
        ], 
        "target_os_bits": "64", 
        "version": "6.3.0", 
        "host_os_uoa": "4258b5fe54828a50", 
        "target_os_uoa": "4258b5fe54828a50"
      }, 
      "env_script": "env.sh", 
      "soft_uoa": "3a8a82fa40bf992d", 
      "env": {
        "CK_FLAGS_DYNAMIC_BIN": " ", 
        "CK_COMPILER_FLAGS_OBLIGATORY": "", 
        "CK_AR": "ar", 
        "CK_COMPILER_POSTFIX": "-6", 
        "CK_PROFILER": "gprof", 
        "CK_COMPILER_TOOLCHAIN_NAME": "gcc", 
        "CK_LIB_EXT": ".a", 
        "CK_OPT_SIZE": "-Os", 
        "CK_OPT_SPEED": "-O3", 
        "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
        "CK_CC": "gcc-6", 
        "CK_RANLIB": "ranlib", 
        "CK_COMPILER_FLAG_GPROF": "-pg", 
        "CK_OPT_ALL_WARNINGS": "-Wall", 
        "CK_LB_OUTPUT": "-o ", 
        "CK_COMPILER_FLAG_STD90": "-std=c90", 
        "CK_FLAG_PREFIX_VAR": "-D", 
        "CK_FLAGS_STATIC_LIB": "-fPIC", 
        "CK_EXTRA_LIB_M": "-lm", 
        "CK_COMPILER_FLAG_STD99": "-std=c99", 
        "CK_COMPILER_FLAG_CPP1Z": "-std=c++1z", 
        "CK_FLAG_PREFIX_LIB_DIR": "-L", 
        "CK_FLAGS_CREATE_OBJ": "-c", 
        "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
        "CK_OPT_UNWIND": " ", 
        "CK_OBJ_EXT": ".o", 
        "CK_COMPILER_FLAG_CPP14": "-std=c++14", 
        "CK_FLAGS_OUTPUT": "-o ", 
        "CK_LB": "ar rcs", 
        "CK_LD": "ld", 
        "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
        "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
        "CK_PLUGIN_FLAG": "-fplugin=", 
        "CK_OPT_SPEED_SAFE": "-O2", 
        "CK_DLL_EXT": ".so", 
        "CK_CXX": "g++-6", 
        "CK_ASM_EXT": ".s", 
        "CK_FLAG_PREFIX_INCLUDE": "-I", 
        "CK_LD_FLAGS_EXTRA": "", 
        "CK_OBJDUMP": "objdump -d", 
        "CK_EXE_EXT": ".out", 
        "CK_FLAGS_DLL_EXTRA": "", 
        "CK_FLAGS_DLL": "-shared -fPIC", 
        "CK_FLAGS_STATIC_BIN": "-static -fPIC", 
        "CK_ENV_COMPILER_GCC": "/usr", 
        "CK_EXTRA_LIB_DL": "-ldl", 
        "CK_GPROF_OUT_FILE": "gmon.out", 
        "CK_MAKE": "make", 
        "CK_COMPILER_FLAG_CPP0X": "-std=c++0x", 
        "CK_COMPILER_FLAG_PLUGIN": "-fplugin=", 
        "CK_FLAGS_CREATE_ASM": "-S"
      }, 
      "soft_alias": "compiler.gcc"
    }, 
    "ver": "6.3.0", 
    "local": "yes"
  }
}
